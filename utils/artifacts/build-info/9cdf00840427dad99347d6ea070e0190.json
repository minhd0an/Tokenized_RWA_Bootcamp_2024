{
	"id": "9cdf00840427dad99347d6ea070e0190",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"utils/Withdraw.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC20} from \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {OwnerIsCreator} from \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\";\n\n/**\n * THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\n * THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\n * DO NOT USE THIS CODE IN PRODUCTION.\n */\ncontract Withdraw is OwnerIsCreator {\n    using SafeERC20 for IERC20;\n\n    error NothingToWithdraw();\n    error FailedToWithdrawEth(address owner, address target, uint256 value);\n\n    function withdraw(address _beneficiary) public onlyOwner {\n        uint256 amount = address(this).balance;\n\n        if (amount == 0) revert NothingToWithdraw();\n\n        (bool sent,) = _beneficiary.call{value: amount}(\"\");\n\n        if (!sent) revert FailedToWithdrawEth(msg.sender, _beneficiary, amount);\n    }\n\n    function withdrawToken(address _beneficiary, address _token) public onlyOwner {\n        uint256 amount = IERC20(_token).balanceOf(address(this));\n\n        if (amount == 0) revert NothingToWithdraw();\n\n        IERC20(_token).safeTransfer(_beneficiary, amount);\n    }\n}"
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwner} from \"./ConfirmedOwner.sol\";\n\n/// @title The OwnerIsCreator contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract OwnerIsCreator is ConfirmedOwner {\n  constructor() ConfirmedOwner(msg.sender) {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwnerWithProposal} from \"./ConfirmedOwnerWithProposal.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOwnable} from \"../interfaces/IOwnable.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    // solhint-disable-next-line custom-errors\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /// @notice Allows an owner to begin transferring ownership to a new address.\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /// @notice Allows an ownership transfer to be completed by the recipient.\n  function acceptOwnership() external override {\n    // solhint-disable-next-line custom-errors\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /// @notice Get the current owner\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /// @notice validate, transfer ownership, and emit relevant events\n  function _transferOwnership(address to) private {\n    // solhint-disable-next-line custom-errors\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /// @notice validate access\n  function _validateOwnership() internal view {\n    // solhint-disable-next-line custom-errors\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /// @notice Reverts if called by anyone other than the contract owner.\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol": {
				"ConfirmedOwner": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The ConfirmedOwner contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":240:381  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  mstore(0x40, 0x80)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":298:379  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":355:363  newOwner */\n  dup1\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":373:374  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":594:616  newOwner != address(0) */\n  dup3\n  and\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_7\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x18\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:615   */\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:616   */\n  mstore\n    /* \"#utility.yul\":633:651   */\n  0x64\n  add\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_7:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":652:659  s_owner */\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":652:670  s_owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":680:706  pendingOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":676:755  if (pendingOwner != address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:748  _transferOwnership(pendingOwner) */\n  tag_11\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":735:747  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:734  _transferOwnership */\n  tag_12\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:748  _transferOwnership(pendingOwner) */\n  jump\t// in\ntag_11:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":481:759  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":298:379  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  pop\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":240:381  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  jump(tag_19)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\ntag_12:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1643:1653  msg.sender */\n  caller\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1637:1653  to != msg.sender */\n  dup3\n  and\n  sub\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":864:866   */\n  0x20\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":846:867   */\n  mstore\n    /* \"#utility.yul\":903:905   */\n  0x17\n    /* \"#utility.yul\":883:901   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":876:906   */\n  mstore\n    /* \"#utility.yul\":942:967   */\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n    /* \"#utility.yul\":922:940   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":915:968   */\n  mstore\n    /* \"#utility.yul\":985:1003   */\n  0x64\n  add\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_8\n    /* \"#utility.yul\":662:1009   */\n  jump\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\ntag_16:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1702  s_pendingOwner */\n  0x01\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n  dup1\n  sload\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n  mload(0x40)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n  swap3\n  swap4\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n  and\n  swap2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  swap2\n  swap1\n  log3\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_21:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_22:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":662:1009   */\ntag_19:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":240:381  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":240:381  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n    tag_4:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1421:1428  address */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1443:1450  s_owner */\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1443:1450  s_owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":160:211   */\n      dup3\n      mstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      add\n      swap1\n      return\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n    tag_7:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1142:1156  s_pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1138  msg.sender */\n      caller\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1156  msg.sender == s_pendingOwner */\n      eq\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x16\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n      shl(0x51, 0x26bab9ba10313290383937b837b9b2b21037bbb732b9)\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:818   */\n      mstore\n        /* \"#utility.yul\":835:853   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1190:1206  address oldOwner */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1232:1242  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1222:1242  s_owner = msg.sender */\n      dup1\n      dup4\n      and\n      dup3\n      or\n      dup5\n      sstore\n      0x01\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1248:1275  s_pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1287:1329  OwnershipTransferred(oldOwner, msg.sender) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1232:1242  msg.sender */\n      swap1\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      dup4\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1287:1329  OwnershipTransferred(oldOwner, msg.sender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1067:1334  {... */\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n    tag_15:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      tag_22\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2077  _validateOwnership */\n      tag_23\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      jump\t// in\n    tag_22:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:936  _transferOwnership(to) */\n      tag_25\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":933:935  to */\n      dup2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:932  _transferOwnership */\n      tag_26\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:936  _transferOwnership(to) */\n      jump\t// in\n    tag_25:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1797:1955  function _validateOwnership() internal view {... */\n    tag_23:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1916:1923  s_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1902:1912  msg.sender */\n      caller\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1902:1923  msg.sender == s_owner */\n      eq\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1066:1068   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1048:1069   */\n      mstore\n        /* \"#utility.yul\":1105:1107   */\n      0x16\n        /* \"#utility.yul\":1085:1103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1078:1108   */\n      mstore\n      shl(0x51, 0x27b7363c9031b0b63630b1363290313c9037bbb732b9)\n        /* \"#utility.yul\":1124:1142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1117:1169   */\n      mstore\n        /* \"#utility.yul\":1186:1204   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_18\n        /* \"#utility.yul\":864:1210   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n    tag_28:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1797:1955  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n    tag_26:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1643:1653  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1637:1653  to != msg.sender */\n      dup3\n      and\n      sub\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1417:1419   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1399:1420   */\n      mstore\n        /* \"#utility.yul\":1456:1458   */\n      0x17\n        /* \"#utility.yul\":1436:1454   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1429:1459   */\n      mstore\n        /* \"#utility.yul\":1495:1520   */\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n        /* \"#utility.yul\":1475:1493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1468:1521   */\n      mstore\n        /* \"#utility.yul\":1538:1556   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_18\n        /* \"#utility.yul\":1215:1562   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n    tag_32:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1702  s_pendingOwner */\n      0x01\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n      mload(0x40)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n      swap3\n      swap4\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n      and\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      swap2\n      swap1\n      log3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_14:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_38:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_39:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203b9f65ea571f6aef4d436fbcd80d271c95c0eb702b84adfa3be88728366973b864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_161": {
									"entryPoint": 197,
									"id": 161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1011:10",
										"nodeType": "YulBlock",
										"src": "0:1011:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:10",
													"nodeType": "YulBlock",
													"src": "95:209:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:10",
																"nodeType": "YulBlock",
																"src": "141:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:10",
																					"nodeType": "YulLiteral",
																					"src": "150:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:10",
																					"nodeType": "YulLiteral",
																					"src": "153:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:10"
																			},
																			"nativeSrc": "143:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:10"
																		},
																		"nativeSrc": "143:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:10"
																		},
																		"nativeSrc": "112:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:10",
																		"nodeType": "YulLiteral",
																		"src": "137:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:10"
																},
																"nativeSrc": "108:32:10",
																"nodeType": "YulFunctionCall",
																"src": "108:32:10"
															},
															"nativeSrc": "105:52:10",
															"nodeType": "YulIf",
															"src": "105:52:10"
														},
														{
															"nativeSrc": "166:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:10"
																},
																"nativeSrc": "179:16:10",
																"nodeType": "YulFunctionCall",
																"src": "179:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:10",
																	"nodeType": "YulTypedName",
																	"src": "170:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:10",
																"nodeType": "YulBlock",
																"src": "258:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:10",
																					"nodeType": "YulLiteral",
																					"src": "267:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:10",
																					"nodeType": "YulLiteral",
																					"src": "270:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:10"
																			},
																			"nativeSrc": "260:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:10"
																		},
																		"nativeSrc": "260:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:10",
																										"nodeType": "YulLiteral",
																										"src": "243:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:10",
																										"nodeType": "YulLiteral",
																										"src": "248:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:10"
																								},
																								"nativeSrc": "239:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:10",
																								"nodeType": "YulLiteral",
																								"src": "252:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:10"
																						},
																						"nativeSrc": "235:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:10"
																				},
																				"nativeSrc": "224:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:10"
																		},
																		"nativeSrc": "214:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:10"
																},
																"nativeSrc": "207:50:10",
																"nodeType": "YulFunctionCall",
																"src": "207:50:10"
															},
															"nativeSrc": "204:70:10",
															"nodeType": "YulIf",
															"src": "204:70:10"
														},
														{
															"nativeSrc": "283:15:10",
															"nodeType": "YulAssignment",
															"src": "283:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:10",
																"nodeType": "YulIdentifier",
																"src": "293:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:10",
														"nodeType": "YulTypedName",
														"src": "61:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:10",
														"nodeType": "YulTypedName",
														"src": "72:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:10",
														"nodeType": "YulTypedName",
														"src": "84:6:10",
														"type": ""
													}
												],
												"src": "14:290:10"
											},
											{
												"body": {
													"nativeSrc": "483:174:10",
													"nodeType": "YulBlock",
													"src": "483:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "500:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:2:10",
																		"nodeType": "YulLiteral",
																		"src": "511:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:10"
																},
																"nativeSrc": "493:21:10",
																"nodeType": "YulFunctionCall",
																"src": "493:21:10"
															},
															"nativeSrc": "493:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "493:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "534:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "545:2:10",
																				"nodeType": "YulLiteral",
																				"src": "545:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "530:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:10"
																		},
																		"nativeSrc": "530:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "550:2:10",
																		"nodeType": "YulLiteral",
																		"src": "550:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "523:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:10"
																},
																"nativeSrc": "523:30:10",
																"nodeType": "YulFunctionCall",
																"src": "523:30:10"
															},
															"nativeSrc": "523:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "523:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "573:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "584:2:10",
																				"nodeType": "YulLiteral",
																				"src": "584:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "569:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:10"
																		},
																		"nativeSrc": "569:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
																		"kind": "string",
																		"nativeSrc": "589:26:10",
																		"nodeType": "YulLiteral",
																		"src": "589:26:10",
																		"type": "",
																		"value": "Cannot set owner to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "562:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:10"
																},
																"nativeSrc": "562:54:10",
																"nodeType": "YulFunctionCall",
																"src": "562:54:10"
															},
															"nativeSrc": "562:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "562:54:10"
														},
														{
															"nativeSrc": "625:26:10",
															"nodeType": "YulAssignment",
															"src": "625:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "637:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "637:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "648:2:10",
																		"nodeType": "YulLiteral",
																		"src": "648:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "633:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "633:3:10"
																},
																"nativeSrc": "633:18:10",
																"nodeType": "YulFunctionCall",
																"src": "633:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "625:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "625:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "309:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "460:9:10",
														"nodeType": "YulTypedName",
														"src": "460:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "474:4:10",
														"nodeType": "YulTypedName",
														"src": "474:4:10",
														"type": ""
													}
												],
												"src": "309:348:10"
											},
											{
												"body": {
													"nativeSrc": "836:173:10",
													"nodeType": "YulBlock",
													"src": "836:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "853:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "853:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "864:2:10",
																		"nodeType": "YulLiteral",
																		"src": "864:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "846:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:10"
																},
																"nativeSrc": "846:21:10",
																"nodeType": "YulFunctionCall",
																"src": "846:21:10"
															},
															"nativeSrc": "846:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "846:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "887:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "887:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "898:2:10",
																				"nodeType": "YulLiteral",
																				"src": "898:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "883:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "883:3:10"
																		},
																		"nativeSrc": "883:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "883:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "903:2:10",
																		"nodeType": "YulLiteral",
																		"src": "903:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "876:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:10"
																},
																"nativeSrc": "876:30:10",
																"nodeType": "YulFunctionCall",
																"src": "876:30:10"
															},
															"nativeSrc": "876:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "876:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "926:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "937:2:10",
																				"nodeType": "YulLiteral",
																				"src": "937:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "922:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "922:3:10"
																		},
																		"nativeSrc": "922:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "922:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "942:25:10",
																		"nodeType": "YulLiteral",
																		"src": "942:25:10",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "915:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:10"
																},
																"nativeSrc": "915:53:10",
																"nodeType": "YulFunctionCall",
																"src": "915:53:10"
															},
															"nativeSrc": "915:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "915:53:10"
														},
														{
															"nativeSrc": "977:26:10",
															"nodeType": "YulAssignment",
															"src": "977:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "989:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "989:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1000:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1000:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "985:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "985:3:10"
																},
																"nativeSrc": "985:18:10",
																"nodeType": "YulFunctionCall",
																"src": "985:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "977:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "977:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "662:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "813:9:10",
														"nodeType": "YulTypedName",
														"src": "813:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "827:4:10",
														"nodeType": "YulTypedName",
														"src": "827:4:10",
														"type": ""
													}
												],
												"src": "662:347:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161045638038061045683398101604081905261002f9161016e565b8060006001600160a01b03821661008d5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100bd576100bd816100c5565b50505061019e565b336001600160a01b0382160361011d5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610084565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561018057600080fd5b81516001600160a01b038116811461019757600080fd5b9392505050565b6102a9806101ad6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212203b9f65ea571f6aef4d436fbcd80d271c95c0eb702b84adfa3be88728366973b864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x456 CODESIZE SUB DUP1 PUSH2 0x456 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x16E JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xBD JUMPI PUSH2 0xBD DUP2 PUSH2 0xC5 JUMP JUMPDEST POP POP POP PUSH2 0x19E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x11D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x84 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2A9 DUP1 PUSH2 0x1AD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SWAP16 PUSH6 0xEA571F6AEF4D NUMBER PUSH16 0xBCD80D271C95C0EB702B84ADFA3BE887 0x28 CALLDATASIZE PUSH10 0x73B864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "240:141:0:-:0;;;298:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;355:8;373:1;-1:-1:-1;;;;;594:22:1;;586:59;;;;-1:-1:-1;;;586:59:1;;511:2:10;586:59:1;;;493:21:10;550:2;530:18;;;523:30;589:26;569:18;;;562:54;633:18;;586:59:1;;;;;;;;;652:7;:18;;-1:-1:-1;;;;;;652:18:1;-1:-1:-1;;;;;652:18:1;;;;;;;;;;680:26;;;676:79;;716:32;735:12;716:18;:32::i;:::-;481:278;;298:81:0;240:141;;1528:235:1;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;864:2:10;1629:52:1;;;846:21:10;903:2;883:18;;;876:30;942:25;922:18;;;915:53;985:18;;1629:52:1;662:347:10;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;14:290:10:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:10;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:10:o;662:347::-;240:141:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_161": {
									"entryPoint": 410,
									"id": 161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOwnership_174": {
									"entryPoint": 325,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_127": {
									"entryPoint": 130,
									"id": 127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_137": {
									"entryPoint": null,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 305,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1564:10",
										"nodeType": "YulBlock",
										"src": "0:1564:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:10",
													"nodeType": "YulBlock",
													"src": "115:102:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:10",
																								"nodeType": "YulLiteral",
																								"src": "198:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:10",
																								"nodeType": "YulLiteral",
																								"src": "203:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:10"
																						},
																						"nativeSrc": "194:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:10",
																						"nodeType": "YulLiteral",
																						"src": "207:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:10"
																				},
																				"nativeSrc": "190:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:10"
																		},
																		"nativeSrc": "178:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:51:10",
																"nodeType": "YulFunctionCall",
																"src": "160:51:10"
															},
															"nativeSrc": "160:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:203:10"
											},
											{
												"body": {
													"nativeSrc": "292:216:10",
													"nodeType": "YulBlock",
													"src": "292:216:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "338:16:10",
																"nodeType": "YulBlock",
																"src": "338:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "347:1:10",
																					"nodeType": "YulLiteral",
																					"src": "347:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "350:1:10",
																					"nodeType": "YulLiteral",
																					"src": "350:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "340:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:10"
																			},
																			"nativeSrc": "340:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:10"
																		},
																		"nativeSrc": "340:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "313:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "322:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:10"
																		},
																		"nativeSrc": "309:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "334:2:10",
																		"nodeType": "YulLiteral",
																		"src": "334:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "305:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:10"
																},
																"nativeSrc": "305:32:10",
																"nodeType": "YulFunctionCall",
																"src": "305:32:10"
															},
															"nativeSrc": "302:52:10",
															"nodeType": "YulIf",
															"src": "302:52:10"
														},
														{
															"nativeSrc": "363:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "389:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "376:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:10"
																},
																"nativeSrc": "376:23:10",
																"nodeType": "YulFunctionCall",
																"src": "376:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "367:5:10",
																	"nodeType": "YulTypedName",
																	"src": "367:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "462:16:10",
																"nodeType": "YulBlock",
																"src": "462:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "471:1:10",
																					"nodeType": "YulLiteral",
																					"src": "471:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:10",
																					"nodeType": "YulLiteral",
																					"src": "474:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "464:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:10"
																			},
																			"nativeSrc": "464:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:10"
																		},
																		"nativeSrc": "464:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "421:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "432:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "447:3:10",
																										"nodeType": "YulLiteral",
																										"src": "447:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "452:1:10",
																										"nodeType": "YulLiteral",
																										"src": "452:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "443:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:10"
																								},
																								"nativeSrc": "443:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "456:1:10",
																								"nodeType": "YulLiteral",
																								"src": "456:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "439:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:10"
																						},
																						"nativeSrc": "439:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "428:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:10"
																				},
																				"nativeSrc": "428:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "418:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:10"
																		},
																		"nativeSrc": "418:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "411:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:10"
																},
																"nativeSrc": "411:50:10",
																"nodeType": "YulFunctionCall",
																"src": "411:50:10"
															},
															"nativeSrc": "408:70:10",
															"nodeType": "YulIf",
															"src": "408:70:10"
														},
														{
															"nativeSrc": "487:15:10",
															"nodeType": "YulAssignment",
															"src": "487:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "497:5:10",
																"nodeType": "YulIdentifier",
																"src": "497:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "487:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "222:286:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "258:9:10",
														"nodeType": "YulTypedName",
														"src": "258:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "269:7:10",
														"nodeType": "YulTypedName",
														"src": "269:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "281:6:10",
														"nodeType": "YulTypedName",
														"src": "281:6:10",
														"type": ""
													}
												],
												"src": "222:286:10"
											},
											{
												"body": {
													"nativeSrc": "687:172:10",
													"nodeType": "YulBlock",
													"src": "687:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "704:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "715:2:10",
																		"nodeType": "YulLiteral",
																		"src": "715:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "697:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:10"
																},
																"nativeSrc": "697:21:10",
																"nodeType": "YulFunctionCall",
																"src": "697:21:10"
															},
															"nativeSrc": "697:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "697:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "738:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "749:2:10",
																				"nodeType": "YulLiteral",
																				"src": "749:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "734:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:10"
																		},
																		"nativeSrc": "734:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "754:2:10",
																		"nodeType": "YulLiteral",
																		"src": "754:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "727:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:10"
																},
																"nativeSrc": "727:30:10",
																"nodeType": "YulFunctionCall",
																"src": "727:30:10"
															},
															"nativeSrc": "727:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "727:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "777:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "788:2:10",
																				"nodeType": "YulLiteral",
																				"src": "788:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		},
																		"nativeSrc": "773:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:10"
																	},
																	{
																		"hexValue": "4d7573742062652070726f706f736564206f776e6572",
																		"kind": "string",
																		"nativeSrc": "793:24:10",
																		"nodeType": "YulLiteral",
																		"src": "793:24:10",
																		"type": "",
																		"value": "Must be proposed owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "766:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:10"
																},
																"nativeSrc": "766:52:10",
																"nodeType": "YulFunctionCall",
																"src": "766:52:10"
															},
															"nativeSrc": "766:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "766:52:10"
														},
														{
															"nativeSrc": "827:26:10",
															"nodeType": "YulAssignment",
															"src": "827:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "839:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "850:2:10",
																		"nodeType": "YulLiteral",
																		"src": "850:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "835:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:10"
																},
																"nativeSrc": "835:18:10",
																"nodeType": "YulFunctionCall",
																"src": "835:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "827:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "513:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "664:9:10",
														"nodeType": "YulTypedName",
														"src": "664:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "678:4:10",
														"nodeType": "YulTypedName",
														"src": "678:4:10",
														"type": ""
													}
												],
												"src": "513:346:10"
											},
											{
												"body": {
													"nativeSrc": "1038:172:10",
													"nodeType": "YulBlock",
													"src": "1038:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1055:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1055:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1066:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1066:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1048:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1048:6:10"
																},
																"nativeSrc": "1048:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1048:21:10"
															},
															"nativeSrc": "1048:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1048:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1089:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1089:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1100:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1100:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1085:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:10"
																		},
																		"nativeSrc": "1085:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1085:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1105:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1078:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:10"
																},
																"nativeSrc": "1078:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1078:30:10"
															},
															"nativeSrc": "1078:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1078:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1139:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1139:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:10"
																		},
																		"nativeSrc": "1124:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1124:18:10"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1144:24:10",
																		"nodeType": "YulLiteral",
																		"src": "1144:24:10",
																		"type": "",
																		"value": "Only callable by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:10"
																},
																"nativeSrc": "1117:52:10",
																"nodeType": "YulFunctionCall",
																"src": "1117:52:10"
															},
															"nativeSrc": "1117:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "1117:52:10"
														},
														{
															"nativeSrc": "1178:26:10",
															"nodeType": "YulAssignment",
															"src": "1178:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1190:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1190:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1186:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:10"
																},
																"nativeSrc": "1186:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1186:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1178:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1178:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "864:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1015:9:10",
														"nodeType": "YulTypedName",
														"src": "1015:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1029:4:10",
														"nodeType": "YulTypedName",
														"src": "1029:4:10",
														"type": ""
													}
												],
												"src": "864:346:10"
											},
											{
												"body": {
													"nativeSrc": "1389:173:10",
													"nodeType": "YulBlock",
													"src": "1389:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1406:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1406:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1399:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																},
																"nativeSrc": "1399:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1399:21:10"
															},
															"nativeSrc": "1399:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1399:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1440:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1440:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1451:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1451:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1436:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:10"
																		},
																		"nativeSrc": "1436:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1436:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1456:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1456:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1429:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:6:10"
																},
																"nativeSrc": "1429:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:30:10"
															},
															"nativeSrc": "1429:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1429:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1479:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1479:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1490:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1490:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1475:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:10"
																		},
																		"nativeSrc": "1475:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1475:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "1495:25:10",
																		"nodeType": "YulLiteral",
																		"src": "1495:25:10",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1468:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1468:6:10"
																},
																"nativeSrc": "1468:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1468:53:10"
															},
															"nativeSrc": "1468:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "1468:53:10"
														},
														{
															"nativeSrc": "1530:26:10",
															"nodeType": "YulAssignment",
															"src": "1530:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1542:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1542:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1553:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1538:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1538:3:10"
																},
																"nativeSrc": "1538:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1538:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1530:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1530:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1215:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:10",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1380:4:10",
														"nodeType": "YulTypedName",
														"src": "1380:4:10",
														"type": ""
													}
												],
												"src": "1215:347:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212203b9f65ea571f6aef4d436fbcd80d271c95c0eb702b84adfa3be88728366973b864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SWAP16 PUSH6 0xEA571F6AEF4D NUMBER PUSH16 0xBCD80D271C95C0EB702B84ADFA3BE887 0x28 CALLDATASIZE PUSH10 0x73B864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "240:141:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:312:1;;;:::i;:::-;;1374:81;1421:7;1443;1374:81;;;-1:-1:-1;;;;;1443:7:1;;;160:51:10;;1374:81:1;;;;;148:2:10;1374:81:1;;;843:98;;;;;;:::i;:::-;;:::i;1022:312::-;1142:14;;-1:-1:-1;;;;;1142:14:1;1128:10;:28;1120:63;;;;-1:-1:-1;;;1120:63:1;;715:2:10;1120:63:1;;;697:21:10;754:2;734:18;;;727:30;-1:-1:-1;;;773:18:10;;;766:52;835:18;;1120:63:1;;;;;;;;;1190:16;1209:7;;1232:10;-1:-1:-1;;;;;;1222:20:1;;;;;;;-1:-1:-1;1248:27:1;;;;;;;1287:42;;-1:-1:-1;;;;;1209:7:1;;;;1232:10;;1209:7;;1287:42;;;1067:267;1022:312::o;843:98::-;2059:20;:18;:20::i;:::-;914:22:::1;933:2;914:18;:22::i;:::-;843:98:::0;:::o;1797:158::-;1916:7;;-1:-1:-1;;;;;1916:7:1;1902:10;:21;1894:56;;;;-1:-1:-1;;;1894:56:1;;1066:2:10;1894:56:1;;;1048:21:10;1105:2;1085:18;;;1078:30;-1:-1:-1;;;1124:18:10;;;1117:52;1186:18;;1894:56:1;864:346:10;1894:56:1;1797:158::o;1528:235::-;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;1417:2:10;1629:52:1;;;1399:21:10;1456:2;1436:18;;;1429:30;1495:25;1475:18;;;1468:53;1538:18;;1629:52:1;1215:347:10;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;222:286:10:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:10;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "52277",
								"owner()": "2292",
								"transferOwnership(address)": "30423"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 298,
									"end": 379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 298,
									"end": 379,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 298,
									"end": 379,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 355,
									"end": 363,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 373,
									"end": 374,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 594,
									"end": 616,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 594,
									"end": 616,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 589,
									"end": 615,
									"name": "PUSH",
									"source": 10,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 562,
									"end": 616,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 633,
									"end": 651,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 633,
									"end": 651,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 586,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 652,
									"end": 659,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 676,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 676,
									"end": 755,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 716,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 735,
									"end": 747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 716,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 716,
									"end": 748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 716,
									"end": 748,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 716,
									"end": 748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 298,
									"end": 379,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1643,
									"end": 1653,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 864,
									"end": 866,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 846,
									"end": 867,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 903,
									"end": 905,
									"name": "PUSH",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 883,
									"end": 901,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 883,
									"end": 901,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 883,
									"end": 901,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 876,
									"end": 906,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 942,
									"end": 967,
									"name": "PUSH",
									"source": 10,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 922,
									"end": 940,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 922,
									"end": 940,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 922,
									"end": 940,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 915,
									"end": 968,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 985,
									"end": 1003,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 985,
									"end": 1003,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 662,
									"end": 1009,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1763,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 662,
									"end": 1009,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 662,
									"end": 1009,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 240,
									"end": 381,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 381,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b9f65ea571f6aef4d436fbcd80d271c95c0eb702b84adfa3be88728366973b864736f6c63430008180033",
									".code": [
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "79BA5097"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 240,
											"end": 381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1022,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1156,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26BAB9BA10313290383937B837B9B2B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 766,
											"end": 818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 835,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 835,
											"end": 853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2059,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 933,
											"end": 935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 914,
											"end": 936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1955,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1797,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1108,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9031B0B63630B1363290313C9037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 864,
											"end": 1210,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1653,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1420,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1458,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1520,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1468,
											"end": 1521,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1562,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"utils/Withdraw.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x927e505bb87a58ea04d1a9efe945f4bf4093e88b618b6fede3b9c68e1e63d989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f41d2c6eb2e11b9952350013d2fd57ec44c01f60fc33855bdb8d84ad352008\",\"dweb:/ipfs/Qmbi7J7LZzvy8imXMfYpRMiKtr9ewcAHfeE4s3zLm11QY4\"]},\"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 31,
								"contract": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"notice": "A contract with helpers for basic contract ownership.",
						"version": 1
					}
				}
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
				"ConfirmedOwnerWithProposal": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The ConfirmedOwner contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":216:2093  contract ConfirmedOwnerWithProposal is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":481:759  constructor(address newOwner, address pendingOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":594:616  newOwner != address(0) */\n  dup3\n  and\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":696:698   */\n  0x20\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":678:699   */\n  mstore\n    /* \"#utility.yul\":735:737   */\n  0x18\n    /* \"#utility.yul\":715:733   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":708:738   */\n  mstore\n    /* \"#utility.yul\":774:800   */\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n    /* \"#utility.yul\":754:772   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":747:801   */\n  mstore\n    /* \"#utility.yul\":818:836   */\n  0x64\n  add\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":652:659  s_owner */\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":652:670  s_owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":680:706  pendingOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":676:755  if (pendingOwner != address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:748  _transferOwnership(pendingOwner) */\n  tag_10\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":735:747  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:734  _transferOwnership */\n  tag_11\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:748  _transferOwnership(pendingOwner) */\n  jump\t// in\ntag_10:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":481:759  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":216:2093  contract ConfirmedOwnerWithProposal is IOwnable {... */\n  jump(tag_18)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\ntag_11:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1643:1653  msg.sender */\n  caller\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1637:1653  to != msg.sender */\n  dup3\n  and\n  sub\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1049:1051   */\n  0x20\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1031:1052   */\n  mstore\n    /* \"#utility.yul\":1088:1090   */\n  0x17\n    /* \"#utility.yul\":1068:1086   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1061:1091   */\n  mstore\n    /* \"#utility.yul\":1127:1152   */\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n    /* \"#utility.yul\":1107:1125   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1100:1153   */\n  mstore\n    /* \"#utility.yul\":1170:1188   */\n  0x64\n  add\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_7\n    /* \"#utility.yul\":847:1194   */\n  jump\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\ntag_14:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1702  s_pendingOwner */\n  0x01\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n  dup1\n  sload\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n  mload(0x40)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n  swap3\n  swap4\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n  and\n  swap2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  swap2\n  swap1\n  log3\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_22:\n    /* \"#utility.yul\":375:415   */\n  tag_23\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_24\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":847:1194   */\ntag_18:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":216:2093  contract ConfirmedOwnerWithProposal is IOwnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":216:2093  contract ConfirmedOwnerWithProposal is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n    tag_4:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1421:1428  address */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1443:1450  s_owner */\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1443:1450  s_owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":160:211   */\n      dup3\n      mstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      add\n      swap1\n      return\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n    tag_7:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1142:1156  s_pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1138  msg.sender */\n      caller\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1156  msg.sender == s_pendingOwner */\n      eq\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x16\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n      shl(0x51, 0x26bab9ba10313290383937b837b9b2b21037bbb732b9)\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:818   */\n      mstore\n        /* \"#utility.yul\":835:853   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1190:1206  address oldOwner */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1232:1242  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1222:1242  s_owner = msg.sender */\n      dup1\n      dup4\n      and\n      dup3\n      or\n      dup5\n      sstore\n      0x01\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1248:1275  s_pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1287:1329  OwnershipTransferred(oldOwner, msg.sender) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1232:1242  msg.sender */\n      swap1\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      dup4\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1287:1329  OwnershipTransferred(oldOwner, msg.sender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1067:1334  {... */\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n    tag_15:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      tag_22\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2077  _validateOwnership */\n      tag_23\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      jump\t// in\n    tag_22:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:936  _transferOwnership(to) */\n      tag_25\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":933:935  to */\n      dup2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:932  _transferOwnership */\n      tag_26\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:936  _transferOwnership(to) */\n      jump\t// in\n    tag_25:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1797:1955  function _validateOwnership() internal view {... */\n    tag_23:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1916:1923  s_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1902:1912  msg.sender */\n      caller\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1902:1923  msg.sender == s_owner */\n      eq\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1066:1068   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1048:1069   */\n      mstore\n        /* \"#utility.yul\":1105:1107   */\n      0x16\n        /* \"#utility.yul\":1085:1103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1078:1108   */\n      mstore\n      shl(0x51, 0x27b7363c9031b0b63630b1363290313c9037bbb732b9)\n        /* \"#utility.yul\":1124:1142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1117:1169   */\n      mstore\n        /* \"#utility.yul\":1186:1204   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_18\n        /* \"#utility.yul\":864:1210   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n    tag_28:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1797:1955  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n    tag_26:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1643:1653  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1637:1653  to != msg.sender */\n      dup3\n      and\n      sub\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1417:1419   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1399:1420   */\n      mstore\n        /* \"#utility.yul\":1456:1458   */\n      0x17\n        /* \"#utility.yul\":1436:1454   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1429:1459   */\n      mstore\n        /* \"#utility.yul\":1495:1520   */\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n        /* \"#utility.yul\":1475:1493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1468:1521   */\n      mstore\n        /* \"#utility.yul\":1538:1556   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_18\n        /* \"#utility.yul\":1215:1562   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n    tag_32:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1702  s_pendingOwner */\n      0x01\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n      mload(0x40)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n      swap3\n      swap4\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n      and\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      swap2\n      swap1\n      log3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_14:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_38:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_39:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203cbe543f5b599bcbfdd70c4ceeaeaa8d74fc99e290b4cdffbc58fe2f8a55f40364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_161": {
									"entryPoint": 193,
									"id": 161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1196:10",
										"nodeType": "YulBlock",
										"src": "0:1196:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:10",
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nativeSrc": "84:22:10",
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nativeSrc": "93:13:10",
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:10",
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:10",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:10",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nativeSrc": "171:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nativeSrc": "171:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:10",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:10",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nativeSrc": "150:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:10",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nativeSrc": "146:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nativeSrc": "135:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nativeSrc": "125:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nativeSrc": "118:50:10",
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nativeSrc": "115:70:10",
															"nodeType": "YulIf",
															"src": "115:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:10",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:10",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "294:195:10",
													"nodeType": "YulBlock",
													"src": "294:195:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:10",
																"nodeType": "YulBlock",
																"src": "340:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:10",
																					"nodeType": "YulLiteral",
																					"src": "349:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:10",
																					"nodeType": "YulLiteral",
																					"src": "352:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:10"
																			},
																			"nativeSrc": "342:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:10"
																		},
																		"nativeSrc": "342:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:10"
																		},
																		"nativeSrc": "311:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:10",
																		"nodeType": "YulLiteral",
																		"src": "336:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:10"
																},
																"nativeSrc": "307:32:10",
																"nodeType": "YulFunctionCall",
																"src": "307:32:10"
															},
															"nativeSrc": "304:52:10",
															"nodeType": "YulIf",
															"src": "304:52:10"
														},
														{
															"nativeSrc": "365:50:10",
															"nodeType": "YulAssignment",
															"src": "365:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:10"
																},
																"nativeSrc": "375:40:10",
																"nodeType": "YulFunctionCall",
																"src": "375:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:10"
																}
															]
														},
														{
															"nativeSrc": "424:59:10",
															"nodeType": "YulAssignment",
															"src": "424:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:10",
																				"nodeType": "YulLiteral",
																				"src": "479:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:10"
																		},
																		"nativeSrc": "464:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:10"
																},
																"nativeSrc": "434:49:10",
																"nodeType": "YulFunctionCall",
																"src": "434:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:10",
														"nodeType": "YulTypedName",
														"src": "252:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:10",
														"nodeType": "YulTypedName",
														"src": "263:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:10",
														"nodeType": "YulTypedName",
														"src": "275:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:10",
														"nodeType": "YulTypedName",
														"src": "283:6:10",
														"type": ""
													}
												],
												"src": "196:293:10"
											},
											{
												"body": {
													"nativeSrc": "668:174:10",
													"nodeType": "YulBlock",
													"src": "668:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "685:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "685:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "696:2:10",
																		"nodeType": "YulLiteral",
																		"src": "696:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "678:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:10"
																},
																"nativeSrc": "678:21:10",
																"nodeType": "YulFunctionCall",
																"src": "678:21:10"
															},
															"nativeSrc": "678:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "678:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "719:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "719:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "730:2:10",
																				"nodeType": "YulLiteral",
																				"src": "730:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "715:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:10"
																		},
																		"nativeSrc": "715:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "735:2:10",
																		"nodeType": "YulLiteral",
																		"src": "735:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "708:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:10"
																},
																"nativeSrc": "708:30:10",
																"nodeType": "YulFunctionCall",
																"src": "708:30:10"
															},
															"nativeSrc": "708:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "708:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "758:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "758:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "769:2:10",
																				"nodeType": "YulLiteral",
																				"src": "769:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "754:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "754:3:10"
																		},
																		"nativeSrc": "754:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "754:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
																		"kind": "string",
																		"nativeSrc": "774:26:10",
																		"nodeType": "YulLiteral",
																		"src": "774:26:10",
																		"type": "",
																		"value": "Cannot set owner to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "747:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "747:6:10"
																},
																"nativeSrc": "747:54:10",
																"nodeType": "YulFunctionCall",
																"src": "747:54:10"
															},
															"nativeSrc": "747:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "747:54:10"
														},
														{
															"nativeSrc": "810:26:10",
															"nodeType": "YulAssignment",
															"src": "810:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "822:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "822:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "833:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "818:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:10"
																},
																"nativeSrc": "818:18:10",
																"nodeType": "YulFunctionCall",
																"src": "818:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "810:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "810:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "494:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "645:9:10",
														"nodeType": "YulTypedName",
														"src": "645:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "659:4:10",
														"nodeType": "YulTypedName",
														"src": "659:4:10",
														"type": ""
													}
												],
												"src": "494:348:10"
											},
											{
												"body": {
													"nativeSrc": "1021:173:10",
													"nodeType": "YulBlock",
													"src": "1021:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1038:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1038:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1049:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1049:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1031:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1031:6:10"
																},
																"nativeSrc": "1031:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1031:21:10"
															},
															"nativeSrc": "1031:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1031:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1072:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1072:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1083:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1083:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1068:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1068:3:10"
																		},
																		"nativeSrc": "1068:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1068:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1088:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1088:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1061:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1061:6:10"
																},
																"nativeSrc": "1061:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1061:30:10"
															},
															"nativeSrc": "1061:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1061:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1111:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1111:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1122:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1122:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1107:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1107:3:10"
																		},
																		"nativeSrc": "1107:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1107:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "1127:25:10",
																		"nodeType": "YulLiteral",
																		"src": "1127:25:10",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:10"
																},
																"nativeSrc": "1100:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1100:53:10"
															},
															"nativeSrc": "1100:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "1100:53:10"
														},
														{
															"nativeSrc": "1162:26:10",
															"nodeType": "YulAssignment",
															"src": "1162:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1174:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1174:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1185:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1185:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1170:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1170:3:10"
																},
																"nativeSrc": "1170:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1170:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1162:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1162:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "847:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "998:9:10",
														"nodeType": "YulTypedName",
														"src": "998:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1012:4:10",
														"nodeType": "YulTypedName",
														"src": "1012:4:10",
														"type": ""
													}
												],
												"src": "847:347:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161047138038061047183398101604081905261002f91610186565b6001600160a01b03821661008a5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100ba576100ba816100c1565b50506101b9565b336001600160a01b038216036101195760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610081565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160a01b038116811461018157600080fd5b919050565b6000806040838503121561019957600080fd5b6101a28361016a565b91506101b06020840161016a565b90509250929050565b6102a9806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212203cbe543f5b599bcbfdd70c4ceeaeaa8d74fc99e290b4cdffbc58fe2f8a55f40364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x471 CODESIZE SUB DUP1 PUSH2 0x471 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0xBA JUMPI PUSH2 0xBA DUP2 PUSH2 0xC1 JUMP JUMPDEST POP POP PUSH2 0x1B9 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x119 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x81 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2 DUP4 PUSH2 0x16A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0 PUSH1 0x20 DUP5 ADD PUSH2 0x16A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A9 DUP1 PUSH2 0x1C8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xBE SLOAD EXTCODEHASH JUMPDEST MSIZE SWAP12 0xCB REVERT 0xD7 0xC 0x4C 0xEE 0xAE 0xAA DUP14 PUSH21 0xFC99E290B4CDFFBC58FE2F8A55F40364736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "216:1877:1:-:0;;;481:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;594:22:1;;586:59;;;;-1:-1:-1;;;586:59:1;;696:2:10;586:59:1;;;678:21:10;735:2;715:18;;;708:30;774:26;754:18;;;747:54;818:18;;586:59:1;;;;;;;;;652:7;:18;;-1:-1:-1;;;;;;652:18:1;-1:-1:-1;;;;;652:18:1;;;;;;;;;;680:26;;;676:79;;716:32;735:12;716:18;:32::i;:::-;481:278;;216:1877;;1528:235;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;1049:2:10;1629:52:1;;;1031:21:10;1088:2;1068:18;;;1061:30;1127:25;1107:18;;;1100:53;1170:18;;1629:52:1;847:347:10;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;847:347::-;216:1877:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_161": {
									"entryPoint": 410,
									"id": 161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOwnership_174": {
									"entryPoint": 325,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_127": {
									"entryPoint": 130,
									"id": 127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_137": {
									"entryPoint": null,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 305,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1564:10",
										"nodeType": "YulBlock",
										"src": "0:1564:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:10",
													"nodeType": "YulBlock",
													"src": "115:102:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:10",
																								"nodeType": "YulLiteral",
																								"src": "198:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:10",
																								"nodeType": "YulLiteral",
																								"src": "203:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:10"
																						},
																						"nativeSrc": "194:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:10",
																						"nodeType": "YulLiteral",
																						"src": "207:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:10"
																				},
																				"nativeSrc": "190:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:10"
																		},
																		"nativeSrc": "178:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:51:10",
																"nodeType": "YulFunctionCall",
																"src": "160:51:10"
															},
															"nativeSrc": "160:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:203:10"
											},
											{
												"body": {
													"nativeSrc": "292:216:10",
													"nodeType": "YulBlock",
													"src": "292:216:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "338:16:10",
																"nodeType": "YulBlock",
																"src": "338:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "347:1:10",
																					"nodeType": "YulLiteral",
																					"src": "347:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "350:1:10",
																					"nodeType": "YulLiteral",
																					"src": "350:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "340:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:10"
																			},
																			"nativeSrc": "340:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:10"
																		},
																		"nativeSrc": "340:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "313:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "322:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:10"
																		},
																		"nativeSrc": "309:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "334:2:10",
																		"nodeType": "YulLiteral",
																		"src": "334:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "305:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:10"
																},
																"nativeSrc": "305:32:10",
																"nodeType": "YulFunctionCall",
																"src": "305:32:10"
															},
															"nativeSrc": "302:52:10",
															"nodeType": "YulIf",
															"src": "302:52:10"
														},
														{
															"nativeSrc": "363:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "389:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "376:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:10"
																},
																"nativeSrc": "376:23:10",
																"nodeType": "YulFunctionCall",
																"src": "376:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "367:5:10",
																	"nodeType": "YulTypedName",
																	"src": "367:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "462:16:10",
																"nodeType": "YulBlock",
																"src": "462:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "471:1:10",
																					"nodeType": "YulLiteral",
																					"src": "471:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:10",
																					"nodeType": "YulLiteral",
																					"src": "474:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "464:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:10"
																			},
																			"nativeSrc": "464:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:10"
																		},
																		"nativeSrc": "464:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "421:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "432:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "447:3:10",
																										"nodeType": "YulLiteral",
																										"src": "447:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "452:1:10",
																										"nodeType": "YulLiteral",
																										"src": "452:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "443:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:10"
																								},
																								"nativeSrc": "443:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "456:1:10",
																								"nodeType": "YulLiteral",
																								"src": "456:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "439:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:10"
																						},
																						"nativeSrc": "439:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "428:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:10"
																				},
																				"nativeSrc": "428:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "418:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:10"
																		},
																		"nativeSrc": "418:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "411:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:10"
																},
																"nativeSrc": "411:50:10",
																"nodeType": "YulFunctionCall",
																"src": "411:50:10"
															},
															"nativeSrc": "408:70:10",
															"nodeType": "YulIf",
															"src": "408:70:10"
														},
														{
															"nativeSrc": "487:15:10",
															"nodeType": "YulAssignment",
															"src": "487:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "497:5:10",
																"nodeType": "YulIdentifier",
																"src": "497:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "487:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "222:286:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "258:9:10",
														"nodeType": "YulTypedName",
														"src": "258:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "269:7:10",
														"nodeType": "YulTypedName",
														"src": "269:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "281:6:10",
														"nodeType": "YulTypedName",
														"src": "281:6:10",
														"type": ""
													}
												],
												"src": "222:286:10"
											},
											{
												"body": {
													"nativeSrc": "687:172:10",
													"nodeType": "YulBlock",
													"src": "687:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "704:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "715:2:10",
																		"nodeType": "YulLiteral",
																		"src": "715:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "697:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:10"
																},
																"nativeSrc": "697:21:10",
																"nodeType": "YulFunctionCall",
																"src": "697:21:10"
															},
															"nativeSrc": "697:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "697:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "738:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "749:2:10",
																				"nodeType": "YulLiteral",
																				"src": "749:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "734:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:10"
																		},
																		"nativeSrc": "734:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "754:2:10",
																		"nodeType": "YulLiteral",
																		"src": "754:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "727:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:10"
																},
																"nativeSrc": "727:30:10",
																"nodeType": "YulFunctionCall",
																"src": "727:30:10"
															},
															"nativeSrc": "727:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "727:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "777:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "788:2:10",
																				"nodeType": "YulLiteral",
																				"src": "788:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		},
																		"nativeSrc": "773:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:10"
																	},
																	{
																		"hexValue": "4d7573742062652070726f706f736564206f776e6572",
																		"kind": "string",
																		"nativeSrc": "793:24:10",
																		"nodeType": "YulLiteral",
																		"src": "793:24:10",
																		"type": "",
																		"value": "Must be proposed owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "766:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:10"
																},
																"nativeSrc": "766:52:10",
																"nodeType": "YulFunctionCall",
																"src": "766:52:10"
															},
															"nativeSrc": "766:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "766:52:10"
														},
														{
															"nativeSrc": "827:26:10",
															"nodeType": "YulAssignment",
															"src": "827:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "839:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "850:2:10",
																		"nodeType": "YulLiteral",
																		"src": "850:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "835:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:10"
																},
																"nativeSrc": "835:18:10",
																"nodeType": "YulFunctionCall",
																"src": "835:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "827:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "513:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "664:9:10",
														"nodeType": "YulTypedName",
														"src": "664:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "678:4:10",
														"nodeType": "YulTypedName",
														"src": "678:4:10",
														"type": ""
													}
												],
												"src": "513:346:10"
											},
											{
												"body": {
													"nativeSrc": "1038:172:10",
													"nodeType": "YulBlock",
													"src": "1038:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1055:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1055:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1066:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1066:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1048:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1048:6:10"
																},
																"nativeSrc": "1048:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1048:21:10"
															},
															"nativeSrc": "1048:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1048:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1089:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1089:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1100:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1100:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1085:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:10"
																		},
																		"nativeSrc": "1085:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1085:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1105:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1078:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:10"
																},
																"nativeSrc": "1078:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1078:30:10"
															},
															"nativeSrc": "1078:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1078:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1139:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1139:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:10"
																		},
																		"nativeSrc": "1124:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1124:18:10"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1144:24:10",
																		"nodeType": "YulLiteral",
																		"src": "1144:24:10",
																		"type": "",
																		"value": "Only callable by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:10"
																},
																"nativeSrc": "1117:52:10",
																"nodeType": "YulFunctionCall",
																"src": "1117:52:10"
															},
															"nativeSrc": "1117:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "1117:52:10"
														},
														{
															"nativeSrc": "1178:26:10",
															"nodeType": "YulAssignment",
															"src": "1178:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1190:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1190:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1186:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:10"
																},
																"nativeSrc": "1186:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1186:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1178:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1178:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "864:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1015:9:10",
														"nodeType": "YulTypedName",
														"src": "1015:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1029:4:10",
														"nodeType": "YulTypedName",
														"src": "1029:4:10",
														"type": ""
													}
												],
												"src": "864:346:10"
											},
											{
												"body": {
													"nativeSrc": "1389:173:10",
													"nodeType": "YulBlock",
													"src": "1389:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1406:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1406:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1399:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																},
																"nativeSrc": "1399:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1399:21:10"
															},
															"nativeSrc": "1399:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1399:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1440:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1440:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1451:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1451:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1436:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:10"
																		},
																		"nativeSrc": "1436:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1436:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1456:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1456:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1429:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:6:10"
																},
																"nativeSrc": "1429:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:30:10"
															},
															"nativeSrc": "1429:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1429:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1479:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1479:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1490:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1490:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1475:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:10"
																		},
																		"nativeSrc": "1475:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1475:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "1495:25:10",
																		"nodeType": "YulLiteral",
																		"src": "1495:25:10",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1468:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1468:6:10"
																},
																"nativeSrc": "1468:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1468:53:10"
															},
															"nativeSrc": "1468:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "1468:53:10"
														},
														{
															"nativeSrc": "1530:26:10",
															"nodeType": "YulAssignment",
															"src": "1530:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1542:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1542:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1553:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1538:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1538:3:10"
																},
																"nativeSrc": "1538:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1538:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1530:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1530:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1215:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:10",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1380:4:10",
														"nodeType": "YulTypedName",
														"src": "1380:4:10",
														"type": ""
													}
												],
												"src": "1215:347:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea26469706673582212203cbe543f5b599bcbfdd70c4ceeaeaa8d74fc99e290b4cdffbc58fe2f8a55f40364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xBE SLOAD EXTCODEHASH JUMPDEST MSIZE SWAP12 0xCB REVERT 0xD7 0xC 0x4C 0xEE 0xAE 0xAA DUP14 PUSH21 0xFC99E290B4CDFFBC58FE2F8A55F40364736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "216:1877:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:312;;;:::i;:::-;;1374:81;1421:7;1443;1374:81;;;-1:-1:-1;;;;;1443:7:1;;;160:51:10;;1374:81:1;;;;;148:2:10;1374:81:1;;;843:98;;;;;;:::i;:::-;;:::i;1022:312::-;1142:14;;-1:-1:-1;;;;;1142:14:1;1128:10;:28;1120:63;;;;-1:-1:-1;;;1120:63:1;;715:2:10;1120:63:1;;;697:21:10;754:2;734:18;;;727:30;-1:-1:-1;;;773:18:10;;;766:52;835:18;;1120:63:1;;;;;;;;;1190:16;1209:7;;1232:10;-1:-1:-1;;;;;;1222:20:1;;;;;;;-1:-1:-1;1248:27:1;;;;;;;1287:42;;-1:-1:-1;;;;;1209:7:1;;;;1232:10;;1209:7;;1287:42;;;1067:267;1022:312::o;843:98::-;2059:20;:18;:20::i;:::-;914:22:::1;933:2;914:18;:22::i;:::-;843:98:::0;:::o;1797:158::-;1916:7;;-1:-1:-1;;;;;1916:7:1;1902:10;:21;1894:56;;;;-1:-1:-1;;;1894:56:1;;1066:2:10;1894:56:1;;;1048:21:10;1105:2;1085:18;;;1078:30;-1:-1:-1;;;1124:18:10;;;1117:52;1186:18;;1894:56:1;864:346:10;1894:56:1;1797:158::o;1528:235::-;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;1417:2:10;1629:52:1;;;1399:21:10;1456:2;1436:18;;;1429:30;1495:25;1475:18;;;1468:53;1538:18;;1629:52:1;1215:347:10;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;222:286:10:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:10;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "52277",
								"owner()": "2292",
								"transferOwnership(address)": "30423"
							},
							"internal": {
								"_transferOwnership(address)": "infinite",
								"_validateOwnership()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 481,
									"end": 759,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 759,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 481,
									"end": 759,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 481,
									"end": 759,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 481,
									"end": 759,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 481,
									"end": 759,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 481,
									"end": 759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 481,
									"end": 759,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 594,
									"end": 616,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 594,
									"end": 616,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 696,
									"end": 698,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 678,
									"end": 699,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 733,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 715,
									"end": 733,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 708,
									"end": 738,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 774,
									"end": 800,
									"name": "PUSH",
									"source": 10,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 754,
									"end": 772,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 754,
									"end": 772,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 747,
									"end": 801,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 818,
									"end": 836,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 818,
									"end": 836,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 586,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 652,
									"end": 659,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 676,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 676,
									"end": 755,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 716,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 735,
									"end": 747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 716,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 716,
									"end": 748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 716,
									"end": 748,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 716,
									"end": 748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1643,
									"end": 1653,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1031,
									"end": 1052,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1088,
									"end": 1090,
									"name": "PUSH",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1091,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1127,
									"end": 1152,
									"name": "PUSH",
									"source": 10,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 1107,
									"end": 1125,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1107,
									"end": 1125,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1125,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1100,
									"end": 1153,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 847,
									"end": 1194,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1763,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 847,
									"end": 1194,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 847,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 2093,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cbe543f5b599bcbfdd70c4ceeaeaa8d74fc99e290b4cdffbc58fe2f8a55f40364736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "79BA5097"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 216,
											"end": 2093,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1022,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1156,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26BAB9BA10313290383937B837B9B2B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 766,
											"end": 818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 835,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 835,
											"end": 853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2059,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 933,
											"end": 935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 914,
											"end": 936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1955,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1797,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1108,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9031B0B63630B1363290313C9037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 864,
											"end": 1210,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1653,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1420,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1458,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1520,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1468,
											"end": 1521,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1562,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"utils/Withdraw.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x927e505bb87a58ea04d1a9efe945f4bf4093e88b618b6fede3b9c68e1e63d989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f41d2c6eb2e11b9952350013d2fd57ec44c01f60fc33855bdb8d84ad352008\",\"dweb:/ipfs/Qmbi7J7LZzvy8imXMfYpRMiKtr9ewcAHfeE4s3zLm11QY4\"]},\"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 31,
								"contract": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"notice": "A contract with helpers for basic contract ownership.",
						"version": 1
					}
				}
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol": {
				"OwnerIsCreator": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The OwnerIsCreator contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":216:307  contract OwnerIsCreator is ConfirmedOwner {... */\n  mstore(0x40, 0x80)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":262:305  constructor() ConfirmedOwner(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":291:301  msg.sender */\n  caller\n  dup1\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":373:374  0 */\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":291:301  msg.sender */\n  dup2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x18\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:320   */\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:321   */\n  mstore\n    /* \"#utility.yul\":338:356   */\n  0x64\n  add\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":652:659  s_owner */\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":652:670  s_owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":680:706  pendingOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":676:755  if (pendingOwner != address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:748  _transferOwnership(pendingOwner) */\n  tag_10\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":735:747  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:734  _transferOwnership */\n  tag_11\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:748  _transferOwnership(pendingOwner) */\n  jump\t// in\ntag_10:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":481:759  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":298:379  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  pop\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":216:307  contract OwnerIsCreator is ConfirmedOwner {... */\n  jump(tag_19)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\ntag_11:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1643:1653  msg.sender */\n  caller\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1637:1653  to != msg.sender */\n  dup3\n  and\n  sub\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":569:571   */\n  0x20\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":551:572   */\n  mstore\n    /* \"#utility.yul\":608:610   */\n  0x17\n    /* \"#utility.yul\":588:606   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":581:611   */\n  mstore\n    /* \"#utility.yul\":647:672   */\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n    /* \"#utility.yul\":627:645   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":620:673   */\n  mstore\n    /* \"#utility.yul\":690:708   */\n  0x64\n  add\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_7\n    /* \"#utility.yul\":367:714   */\n  jump\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\ntag_16:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1702  s_pendingOwner */\n  0x01\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n  dup1\n  sload\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n  mload(0x40)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n  swap3\n  swap4\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n  and\n  swap2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  swap2\n  swap1\n  log3\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":367:714   */\ntag_19:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":216:307  contract OwnerIsCreator is ConfirmedOwner {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":216:307  contract OwnerIsCreator is ConfirmedOwner {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n    tag_4:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1421:1428  address */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1443:1450  s_owner */\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1443:1450  s_owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":160:211   */\n      dup3\n      mstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      add\n      swap1\n      return\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n    tag_7:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1142:1156  s_pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1138  msg.sender */\n      caller\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1156  msg.sender == s_pendingOwner */\n      eq\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x16\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n      shl(0x51, 0x26bab9ba10313290383937b837b9b2b21037bbb732b9)\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:818   */\n      mstore\n        /* \"#utility.yul\":835:853   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1190:1206  address oldOwner */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1232:1242  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1222:1242  s_owner = msg.sender */\n      dup1\n      dup4\n      and\n      dup3\n      or\n      dup5\n      sstore\n      0x01\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1248:1275  s_pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1287:1329  OwnershipTransferred(oldOwner, msg.sender) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1232:1242  msg.sender */\n      swap1\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      dup4\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1287:1329  OwnershipTransferred(oldOwner, msg.sender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1067:1334  {... */\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n    tag_15:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      tag_22\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2077  _validateOwnership */\n      tag_23\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      jump\t// in\n    tag_22:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:936  _transferOwnership(to) */\n      tag_25\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":933:935  to */\n      dup2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:932  _transferOwnership */\n      tag_26\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:936  _transferOwnership(to) */\n      jump\t// in\n    tag_25:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1797:1955  function _validateOwnership() internal view {... */\n    tag_23:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1916:1923  s_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1902:1912  msg.sender */\n      caller\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1902:1923  msg.sender == s_owner */\n      eq\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1066:1068   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1048:1069   */\n      mstore\n        /* \"#utility.yul\":1105:1107   */\n      0x16\n        /* \"#utility.yul\":1085:1103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1078:1108   */\n      mstore\n      shl(0x51, 0x27b7363c9031b0b63630b1363290313c9037bbb732b9)\n        /* \"#utility.yul\":1124:1142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1117:1169   */\n      mstore\n        /* \"#utility.yul\":1186:1204   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_18\n        /* \"#utility.yul\":864:1210   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n    tag_28:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1797:1955  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n    tag_26:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1643:1653  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1637:1653  to != msg.sender */\n      dup3\n      and\n      sub\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1417:1419   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1399:1420   */\n      mstore\n        /* \"#utility.yul\":1456:1458   */\n      0x17\n        /* \"#utility.yul\":1436:1454   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1429:1459   */\n      mstore\n        /* \"#utility.yul\":1495:1520   */\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n        /* \"#utility.yul\":1475:1493   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1468:1521   */\n      mstore\n        /* \"#utility.yul\":1538:1556   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_18\n        /* \"#utility.yul\":1215:1562   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n    tag_32:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1702  s_pendingOwner */\n      0x01\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n      mload(0x40)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n      swap3\n      swap4\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n      and\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      swap2\n      swap1\n      log3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_14:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_38:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_39:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b94e8ac7118893a4d3d8bdcfaf2310d183df149d411fe15a5159f76d148cf65364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_198": {
									"entryPoint": null,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_161": {
									"entryPoint": 159,
									"id": 161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:716:10",
										"nodeType": "YulBlock",
										"src": "0:716:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:174:10",
													"nodeType": "YulBlock",
													"src": "188:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:10",
																		"nodeType": "YulLiteral",
																		"src": "216:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:10"
																},
																"nativeSrc": "198:21:10",
																"nodeType": "YulFunctionCall",
																"src": "198:21:10"
															},
															"nativeSrc": "198:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:10",
																				"nodeType": "YulLiteral",
																				"src": "250:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:10"
																		},
																		"nativeSrc": "235:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:10",
																		"nodeType": "YulLiteral",
																		"src": "255:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:10"
																},
																"nativeSrc": "228:30:10",
																"nodeType": "YulFunctionCall",
																"src": "228:30:10"
															},
															"nativeSrc": "228:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:10",
																				"nodeType": "YulLiteral",
																				"src": "289:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:10"
																		},
																		"nativeSrc": "274:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
																		"kind": "string",
																		"nativeSrc": "294:26:10",
																		"nodeType": "YulLiteral",
																		"src": "294:26:10",
																		"type": "",
																		"value": "Cannot set owner to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:10"
																},
																"nativeSrc": "267:54:10",
																"nodeType": "YulFunctionCall",
																"src": "267:54:10"
															},
															"nativeSrc": "267:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "267:54:10"
														},
														{
															"nativeSrc": "330:26:10",
															"nodeType": "YulAssignment",
															"src": "330:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "342:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "342:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "353:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "338:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "338:3:10"
																},
																"nativeSrc": "338:18:10",
																"nodeType": "YulFunctionCall",
																"src": "338:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "330:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:10",
														"nodeType": "YulTypedName",
														"src": "165:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:10",
														"nodeType": "YulTypedName",
														"src": "179:4:10",
														"type": ""
													}
												],
												"src": "14:348:10"
											},
											{
												"body": {
													"nativeSrc": "541:173:10",
													"nodeType": "YulBlock",
													"src": "541:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "558:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "558:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "569:2:10",
																		"nodeType": "YulLiteral",
																		"src": "569:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "551:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "551:6:10"
																},
																"nativeSrc": "551:21:10",
																"nodeType": "YulFunctionCall",
																"src": "551:21:10"
															},
															"nativeSrc": "551:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "551:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "592:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "592:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "603:2:10",
																				"nodeType": "YulLiteral",
																				"src": "603:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "588:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "588:3:10"
																		},
																		"nativeSrc": "588:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "588:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "608:2:10",
																		"nodeType": "YulLiteral",
																		"src": "608:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "581:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "581:6:10"
																},
																"nativeSrc": "581:30:10",
																"nodeType": "YulFunctionCall",
																"src": "581:30:10"
															},
															"nativeSrc": "581:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "581:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "631:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "631:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "642:2:10",
																				"nodeType": "YulLiteral",
																				"src": "642:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:10"
																		},
																		"nativeSrc": "627:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "627:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "647:25:10",
																		"nodeType": "YulLiteral",
																		"src": "647:25:10",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "620:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:10"
																},
																"nativeSrc": "620:53:10",
																"nodeType": "YulFunctionCall",
																"src": "620:53:10"
															},
															"nativeSrc": "620:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "620:53:10"
														},
														{
															"nativeSrc": "682:26:10",
															"nodeType": "YulAssignment",
															"src": "682:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "694:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "694:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:2:10",
																		"nodeType": "YulLiteral",
																		"src": "705:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "690:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "690:3:10"
																},
																"nativeSrc": "690:18:10",
																"nodeType": "YulFunctionCall",
																"src": "690:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "682:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "682:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "367:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "518:9:10",
														"nodeType": "YulTypedName",
														"src": "518:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "532:4:10",
														"nodeType": "YulTypedName",
														"src": "532:4:10",
														"type": ""
													}
												],
												"src": "367:347:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033806000816100675760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615610097576100978161009f565b505050610148565b336001600160a01b038216036100f75760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161005e565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6102a9806101576000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea2646970667358221220b94e8ac7118893a4d3d8bdcfaf2310d183df149d411fe15a5159f76d148cf65364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH1 0x0 DUP2 PUSH2 0x67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0x97 JUMPI PUSH2 0x97 DUP2 PUSH2 0x9F JUMP JUMPDEST POP POP POP PUSH2 0x148 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x2A9 DUP1 PUSH2 0x157 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0x4E DUP11 0xC7 GT DUP9 SWAP4 LOG4 0xD3 0xD8 0xBD 0xCF 0xAF 0x23 LT 0xD1 DUP4 0xDF EQ SWAP14 COINBASE 0x1F 0xE1 GAS MLOAD MSIZE 0xF7 PUSH14 0x148CF65364736F6C634300081800 CALLER ",
							"sourceMap": "216:91:2:-:0;;;262:43;;;;;;;;;-1:-1:-1;291:10:2;;373:1:0;291:10:2;586:59:1;;;;-1:-1:-1;;;586:59:1;;216:2:10;586:59:1;;;198:21:10;255:2;235:18;;;228:30;294:26;274:18;;;267:54;338:18;;586:59:1;;;;;;;;;652:7;:18;;-1:-1:-1;;;;;;652:18:1;-1:-1:-1;;;;;652:18:1;;;;;;;;;;680:26;;;676:79;;716:32;735:12;716:18;:32::i;:::-;481:278;;298:81:0;216:91:2;;1528:235:1;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;569:2:10;1629:52:1;;;551:21:10;608:2;588:18;;;581:30;647:25;627:18;;;620:53;690:18;;1629:52:1;367:347:10;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;367:347:10:-;216:91:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_161": {
									"entryPoint": 410,
									"id": 161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOwnership_174": {
									"entryPoint": 325,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_127": {
									"entryPoint": 130,
									"id": 127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_137": {
									"entryPoint": null,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 305,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1564:10",
										"nodeType": "YulBlock",
										"src": "0:1564:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:10",
													"nodeType": "YulBlock",
													"src": "115:102:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:10",
																								"nodeType": "YulLiteral",
																								"src": "198:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:10",
																								"nodeType": "YulLiteral",
																								"src": "203:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:10"
																						},
																						"nativeSrc": "194:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:10",
																						"nodeType": "YulLiteral",
																						"src": "207:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:10"
																				},
																				"nativeSrc": "190:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:10"
																		},
																		"nativeSrc": "178:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:51:10",
																"nodeType": "YulFunctionCall",
																"src": "160:51:10"
															},
															"nativeSrc": "160:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:203:10"
											},
											{
												"body": {
													"nativeSrc": "292:216:10",
													"nodeType": "YulBlock",
													"src": "292:216:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "338:16:10",
																"nodeType": "YulBlock",
																"src": "338:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "347:1:10",
																					"nodeType": "YulLiteral",
																					"src": "347:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "350:1:10",
																					"nodeType": "YulLiteral",
																					"src": "350:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "340:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:10"
																			},
																			"nativeSrc": "340:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:10"
																		},
																		"nativeSrc": "340:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "313:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "322:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:10"
																		},
																		"nativeSrc": "309:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "334:2:10",
																		"nodeType": "YulLiteral",
																		"src": "334:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "305:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:10"
																},
																"nativeSrc": "305:32:10",
																"nodeType": "YulFunctionCall",
																"src": "305:32:10"
															},
															"nativeSrc": "302:52:10",
															"nodeType": "YulIf",
															"src": "302:52:10"
														},
														{
															"nativeSrc": "363:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "389:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "376:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:10"
																},
																"nativeSrc": "376:23:10",
																"nodeType": "YulFunctionCall",
																"src": "376:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "367:5:10",
																	"nodeType": "YulTypedName",
																	"src": "367:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "462:16:10",
																"nodeType": "YulBlock",
																"src": "462:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "471:1:10",
																					"nodeType": "YulLiteral",
																					"src": "471:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:10",
																					"nodeType": "YulLiteral",
																					"src": "474:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "464:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:10"
																			},
																			"nativeSrc": "464:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:10"
																		},
																		"nativeSrc": "464:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "421:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "432:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "447:3:10",
																										"nodeType": "YulLiteral",
																										"src": "447:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "452:1:10",
																										"nodeType": "YulLiteral",
																										"src": "452:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "443:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:10"
																								},
																								"nativeSrc": "443:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "456:1:10",
																								"nodeType": "YulLiteral",
																								"src": "456:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "439:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:10"
																						},
																						"nativeSrc": "439:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "428:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:10"
																				},
																				"nativeSrc": "428:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "418:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:10"
																		},
																		"nativeSrc": "418:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "411:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:10"
																},
																"nativeSrc": "411:50:10",
																"nodeType": "YulFunctionCall",
																"src": "411:50:10"
															},
															"nativeSrc": "408:70:10",
															"nodeType": "YulIf",
															"src": "408:70:10"
														},
														{
															"nativeSrc": "487:15:10",
															"nodeType": "YulAssignment",
															"src": "487:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "497:5:10",
																"nodeType": "YulIdentifier",
																"src": "497:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "487:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "222:286:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "258:9:10",
														"nodeType": "YulTypedName",
														"src": "258:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "269:7:10",
														"nodeType": "YulTypedName",
														"src": "269:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "281:6:10",
														"nodeType": "YulTypedName",
														"src": "281:6:10",
														"type": ""
													}
												],
												"src": "222:286:10"
											},
											{
												"body": {
													"nativeSrc": "687:172:10",
													"nodeType": "YulBlock",
													"src": "687:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "704:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "715:2:10",
																		"nodeType": "YulLiteral",
																		"src": "715:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "697:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:10"
																},
																"nativeSrc": "697:21:10",
																"nodeType": "YulFunctionCall",
																"src": "697:21:10"
															},
															"nativeSrc": "697:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "697:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "738:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "749:2:10",
																				"nodeType": "YulLiteral",
																				"src": "749:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "734:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:10"
																		},
																		"nativeSrc": "734:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "754:2:10",
																		"nodeType": "YulLiteral",
																		"src": "754:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "727:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:10"
																},
																"nativeSrc": "727:30:10",
																"nodeType": "YulFunctionCall",
																"src": "727:30:10"
															},
															"nativeSrc": "727:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "727:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "777:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "788:2:10",
																				"nodeType": "YulLiteral",
																				"src": "788:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		},
																		"nativeSrc": "773:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:10"
																	},
																	{
																		"hexValue": "4d7573742062652070726f706f736564206f776e6572",
																		"kind": "string",
																		"nativeSrc": "793:24:10",
																		"nodeType": "YulLiteral",
																		"src": "793:24:10",
																		"type": "",
																		"value": "Must be proposed owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "766:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:10"
																},
																"nativeSrc": "766:52:10",
																"nodeType": "YulFunctionCall",
																"src": "766:52:10"
															},
															"nativeSrc": "766:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "766:52:10"
														},
														{
															"nativeSrc": "827:26:10",
															"nodeType": "YulAssignment",
															"src": "827:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "839:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "850:2:10",
																		"nodeType": "YulLiteral",
																		"src": "850:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "835:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:10"
																},
																"nativeSrc": "835:18:10",
																"nodeType": "YulFunctionCall",
																"src": "835:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "827:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "513:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "664:9:10",
														"nodeType": "YulTypedName",
														"src": "664:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "678:4:10",
														"nodeType": "YulTypedName",
														"src": "678:4:10",
														"type": ""
													}
												],
												"src": "513:346:10"
											},
											{
												"body": {
													"nativeSrc": "1038:172:10",
													"nodeType": "YulBlock",
													"src": "1038:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1055:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1055:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1066:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1066:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1048:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1048:6:10"
																},
																"nativeSrc": "1048:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1048:21:10"
															},
															"nativeSrc": "1048:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1048:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1089:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1089:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1100:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1100:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1085:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:10"
																		},
																		"nativeSrc": "1085:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1085:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1105:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1078:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:10"
																},
																"nativeSrc": "1078:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1078:30:10"
															},
															"nativeSrc": "1078:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1078:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1139:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1139:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:10"
																		},
																		"nativeSrc": "1124:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1124:18:10"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1144:24:10",
																		"nodeType": "YulLiteral",
																		"src": "1144:24:10",
																		"type": "",
																		"value": "Only callable by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:10"
																},
																"nativeSrc": "1117:52:10",
																"nodeType": "YulFunctionCall",
																"src": "1117:52:10"
															},
															"nativeSrc": "1117:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "1117:52:10"
														},
														{
															"nativeSrc": "1178:26:10",
															"nodeType": "YulAssignment",
															"src": "1178:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1190:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1190:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1201:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1186:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:10"
																},
																"nativeSrc": "1186:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1186:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1178:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1178:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "864:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1015:9:10",
														"nodeType": "YulTypedName",
														"src": "1015:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1029:4:10",
														"nodeType": "YulTypedName",
														"src": "1029:4:10",
														"type": ""
													}
												],
												"src": "864:346:10"
											},
											{
												"body": {
													"nativeSrc": "1389:173:10",
													"nodeType": "YulBlock",
													"src": "1389:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1406:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1406:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1399:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																},
																"nativeSrc": "1399:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1399:21:10"
															},
															"nativeSrc": "1399:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1399:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1440:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1440:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1451:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1451:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1436:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:10"
																		},
																		"nativeSrc": "1436:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1436:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1456:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1456:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1429:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:6:10"
																},
																"nativeSrc": "1429:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:30:10"
															},
															"nativeSrc": "1429:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1429:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1479:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1479:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1490:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1490:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1475:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1475:3:10"
																		},
																		"nativeSrc": "1475:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1475:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "1495:25:10",
																		"nodeType": "YulLiteral",
																		"src": "1495:25:10",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1468:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1468:6:10"
																},
																"nativeSrc": "1468:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1468:53:10"
															},
															"nativeSrc": "1468:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "1468:53:10"
														},
														{
															"nativeSrc": "1530:26:10",
															"nodeType": "YulAssignment",
															"src": "1530:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1542:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1542:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1553:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1553:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1538:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1538:3:10"
																},
																"nativeSrc": "1538:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1538:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1530:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1530:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1215:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:10",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1380:4:10",
														"nodeType": "YulTypedName",
														"src": "1380:4:10",
														"type": ""
													}
												],
												"src": "1215:347:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610243565b610131565b6001546001600160a01b031633146100da5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064015b60405180910390fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610139610145565b6101428161019a565b50565b6000546001600160a01b031633146101985760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016100d1565b565b336001600160a01b038216036101f25760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100d1565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561025557600080fd5b81356001600160a01b038116811461026c57600080fd5b939250505056fea2646970667358221220b94e8ac7118893a4d3d8bdcfaf2310d183df149d411fe15a5159f76d148cf65364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x243 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x139 PUSH2 0x145 JUMP JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x19A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0x4E DUP11 0xC7 GT DUP9 SWAP4 LOG4 0xD3 0xD8 0xBD 0xCF 0xAF 0x23 LT 0xD1 DUP4 0xDF EQ SWAP14 COINBASE 0x1F 0xE1 GAS MLOAD MSIZE 0xF7 PUSH14 0x148CF65364736F6C634300081800 CALLER ",
							"sourceMap": "216:91:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:312:1;;;:::i;:::-;;1374:81;1421:7;1443;1374:81;;;-1:-1:-1;;;;;1443:7:1;;;160:51:10;;1374:81:1;;;;;148:2:10;1374:81:1;;;843:98;;;;;;:::i;:::-;;:::i;1022:312::-;1142:14;;-1:-1:-1;;;;;1142:14:1;1128:10;:28;1120:63;;;;-1:-1:-1;;;1120:63:1;;715:2:10;1120:63:1;;;697:21:10;754:2;734:18;;;727:30;-1:-1:-1;;;773:18:10;;;766:52;835:18;;1120:63:1;;;;;;;;;1190:16;1209:7;;1232:10;-1:-1:-1;;;;;;1222:20:1;;;;;;;-1:-1:-1;1248:27:1;;;;;;;1287:42;;-1:-1:-1;;;;;1209:7:1;;;;1232:10;;1209:7;;1287:42;;;1067:267;1022:312::o;843:98::-;2059:20;:18;:20::i;:::-;914:22:::1;933:2;914:18;:22::i;:::-;843:98:::0;:::o;1797:158::-;1916:7;;-1:-1:-1;;;;;1916:7:1;1902:10;:21;1894:56;;;;-1:-1:-1;;;1894:56:1;;1066:2:10;1894:56:1;;;1048:21:10;1105:2;1085:18;;;1078:30;-1:-1:-1;;;1124:18:10;;;1117:52;1186:18;;1894:56:1;864:346:10;1894:56:1;1797:158::o;1528:235::-;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;1417:2:10;1629:52:1;;;1399:21:10;1456:2;1436:18;;;1429:30;1495:25;1475:18;;;1468:53;1538:18;;1629:52:1;1215:347:10;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;222:286:10:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:10;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136200",
								"executionCost": "24518",
								"totalCost": "160718"
							},
							"external": {
								"acceptOwnership()": "52277",
								"owner()": "2292",
								"transferOwnership(address)": "30423"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 307,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 216,
									"end": 307,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 216,
									"end": 307,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 262,
									"end": 305,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 262,
									"end": 305,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 262,
									"end": 305,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 262,
									"end": 305,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 305,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 262,
									"end": 305,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 305,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 262,
									"end": 305,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 262,
									"end": 305,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 305,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 291,
									"end": 301,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 291,
									"end": 301,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 373,
									"end": 374,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 301,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 294,
									"end": 320,
									"name": "PUSH",
									"source": 10,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 267,
									"end": 321,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 338,
									"end": 356,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 338,
									"end": 356,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 586,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 652,
									"end": 659,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 676,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 676,
									"end": 755,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 716,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 735,
									"end": 747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 716,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 716,
									"end": 748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 716,
									"end": 748,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 716,
									"end": 748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 298,
									"end": 379,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 216,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 216,
									"end": 307,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1643,
									"end": 1653,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 569,
									"end": 571,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 551,
									"end": 572,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 608,
									"end": 610,
									"name": "PUSH",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 588,
									"end": 606,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 581,
									"end": 611,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 647,
									"end": 672,
									"name": "PUSH",
									"source": 10,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 627,
									"end": 645,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 627,
									"end": 645,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 627,
									"end": 645,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 620,
									"end": 673,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 690,
									"end": 708,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 690,
									"end": 708,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 367,
									"end": 714,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1763,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 367,
									"end": 714,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 367,
									"end": 714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 216,
									"end": 307,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 307,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 216,
									"end": 307,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 307,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 307,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 216,
									"end": 307,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 307,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b94e8ac7118893a4d3d8bdcfaf2310d183df149d411fe15a5159f76d148cf65364736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "79BA5097"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 307,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1022,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1156,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26BAB9BA10313290383937B837B9B2B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 766,
											"end": 818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 835,
											"end": 853,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 835,
											"end": 853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2059,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 933,
											"end": 935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 914,
											"end": 936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1955,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1797,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1108,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9031B0B63630B1363290313C9037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1124,
											"end": 1142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1186,
											"end": 1204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 864,
											"end": 1210,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1653,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1420,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1458,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1459,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1520,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1468,
											"end": 1521,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1538,
											"end": 1556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1562,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"utils/Withdraw.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The OwnerIsCreator contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":\"OwnerIsCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x927e505bb87a58ea04d1a9efe945f4bf4093e88b618b6fede3b9c68e1e63d989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f41d2c6eb2e11b9952350013d2fd57ec44c01f60fc33855bdb8d84ad352008\",\"dweb:/ipfs/Qmbi7J7LZzvy8imXMfYpRMiKtr9ewcAHfeE4s3zLm11QY4\"]},\"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":{\"keccak256\":\"0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e\",\"dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ\"]},\"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 31,
								"contract": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"notice": "A contract with helpers for basic contract ownership.",
						"version": 1
					}
				}
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205be4415957576b39c3e94bb9cd245f947a85d3d5eb777d54dca5e167437f0c3864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205be4415957576b39c3e94bb9cd245f947a85d3d5eb777d54dca5e167437f0c3864736f6c63430008180033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xE4 COINBASE MSIZE JUMPI JUMPI PUSH12 0x39C3E94BB9CD245F947A85D3 0xD5 0xEB PUSH24 0x7D54DCA5E167437F0C3864736F6C63430008180033000000 ",
							"sourceMap": "751:5018:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205be4415957576b39c3e94bb9cd245f947a85d3d5eb777d54dca5e167437f0c3864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xE4 COINBASE MSIZE JUMPI JUMPI PUSH12 0x39C3E94BB9CD245F947A85D3 0xD5 0xEB PUSH24 0x7D54DCA5E167437F0C3864736F6C63430008180033000000 ",
							"sourceMap": "751:5018:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205be4415957576b39c3e94bb9cd245f947a85d3d5eb777d54dca5e167437f0c3864736f6c63430008180033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"utils/Withdraw.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220392427b1e888aadbfe3f42cc0d1b284486556b79086a058148212d565f71014064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220392427b1e888aadbfe3f42cc0d1b284486556b79086a058148212d565f71014064736f6c63430008180033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x24 0x27 0xB1 0xE8 DUP9 0xAA 0xDB INVALID EXTCODEHASH TIMESTAMP 0xCC 0xD SHL 0x28 PREVRANDAO DUP7 SSTORE PUSH12 0x79086A058148212D565F7101 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220392427b1e888aadbfe3f42cc0d1b284486556b79086a058148212d565f71014064736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x24 0x27 0xB1 0xE8 DUP9 0xAA 0xDB INVALID EXTCODEHASH TIMESTAMP 0xCC 0xD SHL 0x28 PREVRANDAO DUP7 SSTORE PUSH12 0x79086A058148212D565F7101 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220392427b1e888aadbfe3f42cc0d1b284486556b79086a058148212d565f71014064736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"utils/Withdraw.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/Withdraw.sol": {
				"Withdraw": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "FailedToWithdrawEth",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NothingToWithdraw",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"utils/Withdraw.sol\":487:1254  contract Withdraw is OwnerIsCreator {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":291:301  msg.sender */\n  caller\n  dup1\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":373:374  0 */\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":291:301  msg.sender */\n  dup2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x18\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:320   */\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:321   */\n  mstore\n    /* \"#utility.yul\":338:356   */\n  0x64\n  add\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":586:645  require(newOwner != address(0), \"Cannot set owner to zero\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":652:659  s_owner */\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":652:670  s_owner = newOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":680:706  pendingOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":676:755  if (pendingOwner != address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:748  _transferOwnership(pendingOwner) */\n  tag_10\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":735:747  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:734  _transferOwnership */\n  tag_11\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":716:748  _transferOwnership(pendingOwner) */\n  jump\t// in\ntag_10:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":481:759  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":298:379  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  pop\n    /* \"utils/Withdraw.sol\":487:1254  contract Withdraw is OwnerIsCreator {... */\n  jump(tag_19)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\ntag_11:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1643:1653  msg.sender */\n  caller\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1637:1653  to != msg.sender */\n  dup3\n  and\n  sub\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":569:571   */\n  0x20\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":551:572   */\n  mstore\n    /* \"#utility.yul\":608:610   */\n  0x17\n    /* \"#utility.yul\":588:606   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":581:611   */\n  mstore\n    /* \"#utility.yul\":647:672   */\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n    /* \"#utility.yul\":627:645   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":620:673   */\n  mstore\n    /* \"#utility.yul\":690:708   */\n  0x64\n  add\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_7\n    /* \"#utility.yul\":367:714   */\n  jump\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\ntag_16:\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1702  s_pendingOwner */\n  0x01\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n  dup1\n  sload\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n  mload(0x40)\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n  swap3\n  swap4\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n  and\n  swap2\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  swap2\n  swap1\n  log3\n    /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":367:714   */\ntag_19:\n    /* \"utils/Withdraw.sol\":487:1254  contract Withdraw is OwnerIsCreator {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"utils/Withdraw.sol\":487:1254  contract Withdraw is OwnerIsCreator {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3aeac4e1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"utils/Withdraw.sol\":987:1252  function withdrawToken(address _beneficiary, address _token) public onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"utils/Withdraw.sol\":671:981  function withdraw(address _beneficiary) public onlyOwner {... */\n    tag_4:\n      tag_8\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n    tag_5:\n      tag_8\n      tag_17\n      jump\t// in\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n    tag_6:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1421:1428  address */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1443:1450  s_owner */\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1443:1450  s_owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":794:845   */\n      dup3\n      mstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":782:784   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1374:1455  function owner() public view override returns (address) {... */\n      add\n      swap1\n      return\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n    tag_7:\n      tag_8\n      tag_23\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n        /* \"utils/Withdraw.sol\":987:1252  function withdrawToken(address _beneficiary, address _token) public onlyOwner {... */\n    tag_11:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      tag_26\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2077  _validateOwnership */\n      tag_27\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      jump\t// in\n    tag_26:\n        /* \"utils/Withdraw.sol\":1092:1131  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"utils/Withdraw.sol\":1125:1129  this */\n      address\n        /* \"utils/Withdraw.sol\":1092:1131  IERC20(_token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":794:845   */\n      mstore\n        /* \"utils/Withdraw.sol\":1075:1089  uint256 amount */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"utils/Withdraw.sol\":1092:1116  IERC20(_token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":767:785   */\n      0x24\n      add\n        /* \"utils/Withdraw.sol\":1092:1131  IERC20(_token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"utils/Withdraw.sol\":1075:1131  uint256 amount = IERC20(_token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"utils/Withdraw.sol\":1146:1152  amount */\n      dup1\n        /* \"utils/Withdraw.sol\":1156:1157  0 */\n      0x00\n        /* \"utils/Withdraw.sol\":1146:1157  amount == 0 */\n      sub\n        /* \"utils/Withdraw.sol\":1142:1185  if (amount == 0) revert NothingToWithdraw() */\n      tag_34\n      jumpi\n        /* \"utils/Withdraw.sol\":1166:1185  NothingToWithdraw() */\n      mload(0x40)\n      shl(0xe5, 0x0686827b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/Withdraw.sol\":1142:1185  if (amount == 0) revert NothingToWithdraw() */\n    tag_34:\n        /* \"utils/Withdraw.sol\":1196:1245  IERC20(_token).safeTransfer(_beneficiary, amount) */\n      tag_35\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"utils/Withdraw.sol\":1196:1223  IERC20(_token).safeTransfer */\n      dup4\n      and\n        /* \"utils/Withdraw.sol\":1224:1236  _beneficiary */\n      dup5\n        /* \"utils/Withdraw.sol\":1238:1244  amount */\n      dup4\n        /* \"utils/Withdraw.sol\":1196:1223  IERC20(_token).safeTransfer */\n      tag_36\n        /* \"utils/Withdraw.sol\":1196:1245  IERC20(_token).safeTransfer(_beneficiary, amount) */\n      jump\t// in\n    tag_35:\n        /* \"utils/Withdraw.sol\":1065:1252  {... */\n      pop\n        /* \"utils/Withdraw.sol\":987:1252  function withdrawToken(address _beneficiary, address _token) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"utils/Withdraw.sol\":671:981  function withdraw(address _beneficiary) public onlyOwner {... */\n    tag_15:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      tag_38\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2077  _validateOwnership */\n      tag_27\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      jump\t// in\n    tag_38:\n        /* \"utils/Withdraw.sol\":755:776  address(this).balance */\n      selfbalance\n        /* \"utils/Withdraw.sol\":738:752  uint256 amount */\n      0x00\n        /* \"utils/Withdraw.sol\":791:802  amount == 0 */\n      dup2\n      swap1\n      sub\n        /* \"utils/Withdraw.sol\":787:830  if (amount == 0) revert NothingToWithdraw() */\n      tag_40\n      jumpi\n        /* \"utils/Withdraw.sol\":811:830  NothingToWithdraw() */\n      mload(0x40)\n      shl(0xe5, 0x0686827b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"utils/Withdraw.sol\":787:830  if (amount == 0) revert NothingToWithdraw() */\n    tag_40:\n        /* \"utils/Withdraw.sol\":842:851  bool sent */\n      0x00\n        /* \"utils/Withdraw.sol\":856:868  _beneficiary */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"utils/Withdraw.sol\":856:873  _beneficiary.call */\n      and\n        /* \"utils/Withdraw.sol\":881:887  amount */\n      dup3\n        /* \"utils/Withdraw.sol\":856:892  _beneficiary.call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_45\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_44)\n    tag_45:\n      0x60\n      swap2\n      pop\n    tag_44:\n      pop\n        /* \"utils/Withdraw.sol\":841:892  (bool sent,) = _beneficiary.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"utils/Withdraw.sol\":908:912  sent */\n      dup1\n        /* \"utils/Withdraw.sol\":903:974  if (!sent) revert FailedToWithdrawEth(msg.sender, _beneficiary, amount) */\n      tag_35\n      jumpi\n        /* \"utils/Withdraw.sol\":921:974  FailedToWithdrawEth(msg.sender, _beneficiary, amount) */\n      mload(0x40)\n      shl(0xe0, 0x9d11f563)\n      dup2\n      mstore\n        /* \"utils/Withdraw.sol\":941:951  msg.sender */\n      caller\n        /* \"utils/Withdraw.sol\":921:974  FailedToWithdrawEth(msg.sender, _beneficiary, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1495:1529   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1565:1580   */\n      dup5\n      and\n        /* \"#utility.yul\":1545:1563   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1538:1581   */\n      mstore\n        /* \"#utility.yul\":1597:1615   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":1590:1624   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":1430:1448   */\n      0x64\n      add\n        /* \"utils/Withdraw.sol\":921:974  FailedToWithdrawEth(msg.sender, _beneficiary, amount) */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n    tag_17:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1142:1156  s_pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1138  msg.sender */\n      caller\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1128:1156  msg.sender == s_pendingOwner */\n      eq\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1837:1839   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1819:1840   */\n      mstore\n        /* \"#utility.yul\":1876:1878   */\n      0x16\n        /* \"#utility.yul\":1856:1874   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1849:1879   */\n      mstore\n      shl(0x51, 0x26bab9ba10313290383937b837b9b2b21037bbb732b9)\n        /* \"#utility.yul\":1895:1913   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1888:1940   */\n      mstore\n        /* \"#utility.yul\":1957:1975   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_47\n        /* \"#utility.yul\":1635:1981   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1120:1183  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n    tag_50:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1190:1206  address oldOwner */\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1232:1242  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1222:1242  s_owner = msg.sender */\n      dup1\n      dup4\n      and\n      dup3\n      or\n      dup5\n      sstore\n      0x01\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1248:1275  s_pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1287:1329  OwnershipTransferred(oldOwner, msg.sender) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1232:1242  msg.sender */\n      swap1\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1209:1216  s_owner */\n      dup4\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1287:1329  OwnershipTransferred(oldOwner, msg.sender) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1067:1334  {... */\n      pop\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1022:1334  function acceptOwnership() external override {... */\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n    tag_24:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      tag_55\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2077  _validateOwnership */\n      tag_27\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":2059:2079  _validateOwnership() */\n      jump\t// in\n    tag_55:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:936  _transferOwnership(to) */\n      tag_57\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":933:935  to */\n      dup2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:932  _transferOwnership */\n      tag_58\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":914:936  _transferOwnership(to) */\n      jump\t// in\n    tag_57:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":843:941  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1797:1955  function _validateOwnership() internal view {... */\n    tag_27:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1916:1923  s_owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1902:1912  msg.sender */\n      caller\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1902:1923  msg.sender == s_owner */\n      eq\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2188:2190   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2170:2191   */\n      mstore\n        /* \"#utility.yul\":2227:2229   */\n      0x16\n        /* \"#utility.yul\":2207:2225   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2200:2230   */\n      mstore\n      shl(0x51, 0x27b7363c9031b0b63630b1363290313c9037bbb732b9)\n        /* \"#utility.yul\":2246:2264   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2239:2291   */\n      mstore\n        /* \"#utility.yul\":2308:2326   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_47\n        /* \"#utility.yul\":1986:2332   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1894:1950  require(msg.sender == s_owner, \"Only callable by owner\") */\n    tag_60:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1797:1955  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2529:2561   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2511:2562   */\n      mstore\n        /* \"#utility.yul\":2578:2596   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2571:2605   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2484:2502   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_35\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n    tag_58:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1643:1653  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1637:1653  to != msg.sender */\n      dup3\n      and\n      sub\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2818:2820   */\n      0x20\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2800:2821   */\n      mstore\n        /* \"#utility.yul\":2857:2859   */\n      0x17\n        /* \"#utility.yul\":2837:2855   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2830:2860   */\n      mstore\n        /* \"#utility.yul\":2896:2921   */\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n        /* \"#utility.yul\":2876:2894   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2869:2922   */\n      mstore\n        /* \"#utility.yul\":2939:2957   */\n      0x64\n      add\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_47\n        /* \"#utility.yul\":2616:2963   */\n      jump\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1629:1681  require(to != msg.sender, \"Cannot transfer to self\") */\n    tag_69:\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1702  s_pendingOwner */\n      0x01\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n      dup1\n      sload\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n      mload(0x40)\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1688:1707  s_pendingOwner = to */\n      swap3\n      swap4\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1746:1753  s_owner */\n      and\n      swap2\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1719:1758  OwnershipTransferRequested(s_owner, to) */\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      swap2\n      swap1\n      log3\n        /* \"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1528:1763  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_73\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_75\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":812:844   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":794:845   */\n      mstore\n        /* \"#utility.yul\":767:785   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_47\n        /* \"#utility.yul\":648:851   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_81\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_82\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":794:845   */\n      mstore\n        /* \"#utility.yul\":767:785   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      tag_47\n        /* \"#utility.yul\":648:851   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_90\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_89)\n    tag_90:\n      0x60\n      swap2\n      pop\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_92\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_94\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_81)\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_98\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":812:844   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":794:845   */\n      mstore\n        /* \"#utility.yul\":767:785   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_47\n        /* \"#utility.yul\":648:851   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_99:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_81)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:187   */\n    tag_104:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_107:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:452   */\n    tag_10:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_109:\n        /* \"#utility.yul\":360:389   */\n      tag_110\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_104\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":350:389   */\n      swap2\n      pop\n        /* \"#utility.yul\":408:446   */\n      tag_111\n        /* \"#utility.yul\":442:444   */\n      0x20\n        /* \"#utility.yul\":431:440   */\n      dup5\n        /* \"#utility.yul\":427:445   */\n      add\n        /* \"#utility.yul\":408:446   */\n      tag_104\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":398:446   */\n      swap1\n      pop\n        /* \"#utility.yul\":192:452   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":457:643   */\n    tag_14:\n        /* \"#utility.yul\":516:522   */\n      0x00\n        /* \"#utility.yul\":569:571   */\n      0x20\n        /* \"#utility.yul\":557:566   */\n      dup3\n        /* \"#utility.yul\":548:555   */\n      dup5\n        /* \"#utility.yul\":544:567   */\n      sub\n        /* \"#utility.yul\":540:572   */\n      slt\n        /* \"#utility.yul\":537:589   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":585:586   */\n      0x00\n        /* \"#utility.yul\":582:583   */\n      dup1\n        /* \"#utility.yul\":575:587   */\n      revert\n        /* \"#utility.yul\":537:589   */\n    tag_113:\n        /* \"#utility.yul\":608:637   */\n      tag_81\n        /* \"#utility.yul\":627:636   */\n      dup3\n        /* \"#utility.yul\":608:637   */\n      tag_104\n      jump\t// in\n        /* \"#utility.yul\":856:1040   */\n    tag_33:\n        /* \"#utility.yul\":926:932   */\n      0x00\n        /* \"#utility.yul\":979:981   */\n      0x20\n        /* \"#utility.yul\":967:976   */\n      dup3\n        /* \"#utility.yul\":958:965   */\n      dup5\n        /* \"#utility.yul\":954:977   */\n      sub\n        /* \"#utility.yul\":950:982   */\n      slt\n        /* \"#utility.yul\":947:999   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":995:996   */\n      0x00\n        /* \"#utility.yul\":992:993   */\n      dup1\n        /* \"#utility.yul\":985:997   */\n      revert\n        /* \"#utility.yul\":947:999   */\n    tag_117:\n      pop\n        /* \"#utility.yul\":1018:1034   */\n      mload\n      swap2\n        /* \"#utility.yul\":856:1040   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2968:3245   */\n    tag_77:\n        /* \"#utility.yul\":3035:3041   */\n      0x00\n        /* \"#utility.yul\":3088:3090   */\n      0x20\n        /* \"#utility.yul\":3076:3085   */\n      dup3\n        /* \"#utility.yul\":3067:3074   */\n      dup5\n        /* \"#utility.yul\":3063:3086   */\n      sub\n        /* \"#utility.yul\":3059:3091   */\n      slt\n        /* \"#utility.yul\":3056:3108   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":3104:3105   */\n      0x00\n        /* \"#utility.yul\":3101:3102   */\n      dup1\n        /* \"#utility.yul\":3094:3106   */\n      revert\n        /* \"#utility.yul\":3056:3108   */\n    tag_125:\n        /* \"#utility.yul\":3136:3145   */\n      dup2\n        /* \"#utility.yul\":3130:3146   */\n      mload\n        /* \"#utility.yul\":3189:3194   */\n      dup1\n        /* \"#utility.yul\":3182:3195   */\n      iszero\n        /* \"#utility.yul\":3175:3196   */\n      iszero\n        /* \"#utility.yul\":3168:3173   */\n      dup2\n        /* \"#utility.yul\":3165:3197   */\n      eq\n        /* \"#utility.yul\":3155:3215   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":3211:3212   */\n      0x00\n        /* \"#utility.yul\":3208:3209   */\n      dup1\n        /* \"#utility.yul\":3201:3213   */\n      revert\n        /* \"#utility.yul\":3250:3662   */\n    tag_87:\n        /* \"#utility.yul\":3379:3382   */\n      0x00\n        /* \"#utility.yul\":3417:3423   */\n      dup3\n        /* \"#utility.yul\":3411:3424   */\n      mload\n        /* \"#utility.yul\":3442:3443   */\n      0x00\n        /* \"#utility.yul\":3452:3581   */\n    tag_128:\n        /* \"#utility.yul\":3466:3472   */\n      dup2\n        /* \"#utility.yul\":3463:3464   */\n      dup2\n        /* \"#utility.yul\":3460:3473   */\n      lt\n        /* \"#utility.yul\":3452:3581   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":3564:3568   */\n      0x20\n        /* \"#utility.yul\":3548:3562   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":3544:3569   */\n      dup2\n      add\n        /* \"#utility.yul\":3538:3570   */\n      mload\n        /* \"#utility.yul\":3525:3536   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":3518:3571   */\n      mstore\n        /* \"#utility.yul\":3481:3493   */\n      add\n        /* \"#utility.yul\":3452:3581   */\n      jump(tag_128)\n    tag_130:\n      pop\n        /* \"#utility.yul\":3636:3637   */\n      0x00\n        /* \"#utility.yul\":3600:3616   */\n      swap3\n      add\n        /* \"#utility.yul\":3625:3638   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":3600:3616   */\n      swap2\n        /* \"#utility.yul\":3250:3662   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220171f5c896e0e2f6d004781b80f4db687152908f041b2130f766e5f1070e3319c64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_198": {
									"entryPoint": null,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_161": {
									"entryPoint": 159,
									"id": 161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:716:10",
										"nodeType": "YulBlock",
										"src": "0:716:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:174:10",
													"nodeType": "YulBlock",
													"src": "188:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:10",
																		"nodeType": "YulLiteral",
																		"src": "216:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:10"
																},
																"nativeSrc": "198:21:10",
																"nodeType": "YulFunctionCall",
																"src": "198:21:10"
															},
															"nativeSrc": "198:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:10",
																				"nodeType": "YulLiteral",
																				"src": "250:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:10"
																		},
																		"nativeSrc": "235:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:10",
																		"nodeType": "YulLiteral",
																		"src": "255:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:10"
																},
																"nativeSrc": "228:30:10",
																"nodeType": "YulFunctionCall",
																"src": "228:30:10"
															},
															"nativeSrc": "228:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:10",
																				"nodeType": "YulLiteral",
																				"src": "289:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:10"
																		},
																		"nativeSrc": "274:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
																		"kind": "string",
																		"nativeSrc": "294:26:10",
																		"nodeType": "YulLiteral",
																		"src": "294:26:10",
																		"type": "",
																		"value": "Cannot set owner to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:10"
																},
																"nativeSrc": "267:54:10",
																"nodeType": "YulFunctionCall",
																"src": "267:54:10"
															},
															"nativeSrc": "267:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "267:54:10"
														},
														{
															"nativeSrc": "330:26:10",
															"nodeType": "YulAssignment",
															"src": "330:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "342:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "342:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "353:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "338:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "338:3:10"
																},
																"nativeSrc": "338:18:10",
																"nodeType": "YulFunctionCall",
																"src": "338:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "330:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:10",
														"nodeType": "YulTypedName",
														"src": "165:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:10",
														"nodeType": "YulTypedName",
														"src": "179:4:10",
														"type": ""
													}
												],
												"src": "14:348:10"
											},
											{
												"body": {
													"nativeSrc": "541:173:10",
													"nodeType": "YulBlock",
													"src": "541:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "558:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "558:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "569:2:10",
																		"nodeType": "YulLiteral",
																		"src": "569:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "551:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "551:6:10"
																},
																"nativeSrc": "551:21:10",
																"nodeType": "YulFunctionCall",
																"src": "551:21:10"
															},
															"nativeSrc": "551:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "551:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "592:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "592:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "603:2:10",
																				"nodeType": "YulLiteral",
																				"src": "603:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "588:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "588:3:10"
																		},
																		"nativeSrc": "588:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "588:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "608:2:10",
																		"nodeType": "YulLiteral",
																		"src": "608:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "581:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "581:6:10"
																},
																"nativeSrc": "581:30:10",
																"nodeType": "YulFunctionCall",
																"src": "581:30:10"
															},
															"nativeSrc": "581:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "581:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "631:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "631:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "642:2:10",
																				"nodeType": "YulLiteral",
																				"src": "642:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:10"
																		},
																		"nativeSrc": "627:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "627:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "647:25:10",
																		"nodeType": "YulLiteral",
																		"src": "647:25:10",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "620:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:10"
																},
																"nativeSrc": "620:53:10",
																"nodeType": "YulFunctionCall",
																"src": "620:53:10"
															},
															"nativeSrc": "620:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "620:53:10"
														},
														{
															"nativeSrc": "682:26:10",
															"nodeType": "YulAssignment",
															"src": "682:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "694:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "694:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:2:10",
																		"nodeType": "YulLiteral",
																		"src": "705:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "690:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "690:3:10"
																},
																"nativeSrc": "690:18:10",
																"nodeType": "YulFunctionCall",
																"src": "690:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "682:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "682:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "367:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "518:9:10",
														"nodeType": "YulTypedName",
														"src": "518:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "532:4:10",
														"nodeType": "YulTypedName",
														"src": "532:4:10",
														"type": ""
													}
												],
												"src": "367:347:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot set owner to zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033806000816100675760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615610097576100978161009f565b505050610148565b336001600160a01b038216036100f75760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161005e565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6106db806101576000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633aeac4e11461005c57806351cff8d91461007157806379ba5097146100845780638da5cb5b1461008c578063f2fde38b146100ab575b600080fd5b61006f61006a3660046105ed565b6100be565b005b61006f61007f366004610620565b61016d565b61006f610229565b600054604080516001600160a01b039092168252519081900360200190f35b61006f6100b9366004610620565b6102d3565b6100c66102e7565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561010d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610131919061063b565b90508060000361015457604051630686827b60e51b815260040160405180910390fd5b6101686001600160a01b038316848361033c565b505050565b6101756102e7565b47600081900361019857604051630686827b60e51b815260040160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b505090508061016857604051639d11f56360e01b81523360048201526001600160a01b0384166024820152604481018390526064015b60405180910390fd5b6001546001600160a01b0316331461027c5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606401610220565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6102db6102e7565b6102e48161038e565b50565b6000546001600160a01b0316331461033a5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610220565b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610168908490610437565b336001600160a01b038216036103e65760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610220565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600061044c6001600160a01b0384168361049a565b9050805160001415801561047157508080602001905181019061046f9190610654565b155b1561016857604051635274afe760e01b81526001600160a01b0384166004820152602401610220565b60606104a8838360006104af565b9392505050565b6060814710156104d45760405163cd78605960e01b8152306004820152602401610220565b600080856001600160a01b031684866040516104f09190610676565b60006040518083038185875af1925050503d806000811461052d576040519150601f19603f3d011682016040523d82523d6000602084013e610532565b606091505b509150915061054286838361054c565b9695505050505050565b6060826105615761055c826105a8565b6104a8565b815115801561057857506001600160a01b0384163b155b156105a157604051639996b31560e01b81526001600160a01b0385166004820152602401610220565b50806104a8565b8051156105b85780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b03811681146105e857600080fd5b919050565b6000806040838503121561060057600080fd5b610609836105d1565b9150610617602084016105d1565b90509250929050565b60006020828403121561063257600080fd5b6104a8826105d1565b60006020828403121561064d57600080fd5b5051919050565b60006020828403121561066657600080fd5b815180151581146104a857600080fd5b6000825160005b81811015610697576020818601810151858301520161067d565b50600092019182525091905056fea2646970667358221220171f5c896e0e2f6d004781b80f4db687152908f041b2130f766e5f1070e3319c64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH1 0x0 DUP2 PUSH2 0x67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP2 AND ISZERO PUSH2 0x97 JUMPI PUSH2 0x97 DUP2 PUSH2 0x9F JUMP JUMPDEST POP POP POP PUSH2 0x148 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x6DB DUP1 PUSH2 0x157 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AEAC4E1 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x16D JUMP JUMPDEST PUSH2 0x6F PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x63B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x168 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 DUP4 PUSH2 0x33C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2E7 JUMP JUMPDEST SELFBALANCE PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9D11F563 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x2E4 DUP2 PUSH2 0x38E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x168 SWAP1 DUP5 SWAP1 PUSH2 0x437 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x49A JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x471 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x654 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4A8 DUP4 DUP4 PUSH1 0x0 PUSH2 0x4AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x532 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x542 DUP7 DUP4 DUP4 PUSH2 0x54C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x561 JUMPI PUSH2 0x55C DUP3 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x220 JUMP JUMPDEST POP DUP1 PUSH2 0x4A8 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x5B8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x609 DUP4 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x617 PUSH1 0x20 DUP5 ADD PUSH2 0x5D1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A8 DUP3 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x697 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x67D JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0x1F TLOAD DUP10 PUSH15 0xE2F6D004781B80F4DB687152908F0 COINBASE 0xB2 SGT 0xF PUSH23 0x6E5F1070E3319C64736F6C634300081800330000000000 ",
							"sourceMap": "487:767:9:-:0;;;;;;;;;;;;-1:-1:-1;291:10:2;;373:1:0;291:10:2;586:59:1;;;;-1:-1:-1;;;586:59:1;;216:2:10;586:59:1;;;198:21:10;255:2;235:18;;;228:30;294:26;274:18;;;267:54;338:18;;586:59:1;;;;;;;;;652:7;:18;;-1:-1:-1;;;;;;652:18:1;-1:-1:-1;;;;;652:18:1;;;;;;;;;;680:26;;;676:79;;716:32;735:12;716:18;:32::i;:::-;481:278;;298:81:0;487:767:9;;1528:235:1;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;569:2:10;1629:52:1;;;551:21:10;608:2;588:18;;;581:30;647:25;627:18;;;620:53;690:18;;1629:52:1;367:347:10;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;367:347:10:-;487:767:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_573": {
									"entryPoint": 1079,
									"id": 573,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_875": {
									"entryPoint": 1448,
									"id": 875,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_161": {
									"entryPoint": 910,
									"id": 161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOwnership_174": {
									"entryPoint": 743,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_127": {
									"entryPoint": 553,
									"id": 127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_743": {
									"entryPoint": 1199,
									"id": 743,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_697": {
									"entryPoint": 1178,
									"id": 697,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_137": {
									"entryPoint": null,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransfer_383": {
									"entryPoint": 828,
									"id": 383,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 723,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_835": {
									"entryPoint": 1356,
									"id": 835,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawToken_980": {
									"entryPoint": 190,
									"id": 980,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_943": {
									"entryPoint": 365,
									"id": 943,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3664:10",
										"nodeType": "YulBlock",
										"src": "0:3664:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:10",
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nativeSrc": "73:29:10",
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nativeSrc": "82:20:10",
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:10",
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:10",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:10",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nativeSrc": "167:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nativeSrc": "167:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:10",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:10",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nativeSrc": "146:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:10",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nativeSrc": "142:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nativeSrc": "131:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nativeSrc": "121:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nativeSrc": "114:50:10",
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nativeSrc": "111:70:10",
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:10",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:10",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nativeSrc": "279:173:10",
													"nodeType": "YulBlock",
													"src": "279:173:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:10",
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:10",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:10",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nativeSrc": "327:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nativeSrc": "327:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nativeSrc": "296:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:10",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nativeSrc": "292:32:10",
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nativeSrc": "289:52:10",
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nativeSrc": "350:39:10",
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nativeSrc": "360:29:10",
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nativeSrc": "398:48:10",
															"nodeType": "YulAssignment",
															"src": "398:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "431:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "431:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "442:2:10",
																				"nodeType": "YulLiteral",
																				"src": "442:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "427:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "427:3:10"
																		},
																		"nativeSrc": "427:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "427:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "408:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "408:18:10"
																},
																"nativeSrc": "408:38:10",
																"nodeType": "YulFunctionCall",
																"src": "408:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "398:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "192:260:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:10",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:10",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:10",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:10",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:260:10"
											},
											{
												"body": {
													"nativeSrc": "527:116:10",
													"nodeType": "YulBlock",
													"src": "527:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "573:16:10",
																"nodeType": "YulBlock",
																"src": "573:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "582:1:10",
																					"nodeType": "YulLiteral",
																					"src": "582:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "585:1:10",
																					"nodeType": "YulLiteral",
																					"src": "585:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "575:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "575:6:10"
																			},
																			"nativeSrc": "575:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "575:12:10"
																		},
																		"nativeSrc": "575:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "575:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "548:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "548:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "557:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "557:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "544:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:10"
																		},
																		"nativeSrc": "544:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "544:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "569:2:10",
																		"nodeType": "YulLiteral",
																		"src": "569:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "540:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "540:3:10"
																},
																"nativeSrc": "540:32:10",
																"nodeType": "YulFunctionCall",
																"src": "540:32:10"
															},
															"nativeSrc": "537:52:10",
															"nodeType": "YulIf",
															"src": "537:52:10"
														},
														{
															"nativeSrc": "598:39:10",
															"nodeType": "YulAssignment",
															"src": "598:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "627:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "627:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "608:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "608:18:10"
																},
																"nativeSrc": "608:29:10",
																"nodeType": "YulFunctionCall",
																"src": "608:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "457:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "493:9:10",
														"nodeType": "YulTypedName",
														"src": "493:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "504:7:10",
														"nodeType": "YulTypedName",
														"src": "504:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "516:6:10",
														"nodeType": "YulTypedName",
														"src": "516:6:10",
														"type": ""
													}
												],
												"src": "457:186:10"
											},
											{
												"body": {
													"nativeSrc": "749:102:10",
													"nodeType": "YulBlock",
													"src": "749:102:10",
													"statements": [
														{
															"nativeSrc": "759:26:10",
															"nodeType": "YulAssignment",
															"src": "759:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "771:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "771:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "782:2:10",
																		"nodeType": "YulLiteral",
																		"src": "782:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "767:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:10"
																},
																"nativeSrc": "767:18:10",
																"nodeType": "YulFunctionCall",
																"src": "767:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "759:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "759:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "801:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "801:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "816:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "816:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "832:3:10",
																								"nodeType": "YulLiteral",
																								"src": "832:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "837:1:10",
																								"nodeType": "YulLiteral",
																								"src": "837:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "828:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "828:3:10"
																						},
																						"nativeSrc": "828:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "828:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "841:1:10",
																						"nodeType": "YulLiteral",
																						"src": "841:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "824:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "824:3:10"
																				},
																				"nativeSrc": "824:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "824:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "812:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:10"
																		},
																		"nativeSrc": "812:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "812:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "794:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "794:6:10"
																},
																"nativeSrc": "794:51:10",
																"nodeType": "YulFunctionCall",
																"src": "794:51:10"
															},
															"nativeSrc": "794:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "794:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "648:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "718:9:10",
														"nodeType": "YulTypedName",
														"src": "718:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "729:6:10",
														"nodeType": "YulTypedName",
														"src": "729:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "740:4:10",
														"nodeType": "YulTypedName",
														"src": "740:4:10",
														"type": ""
													}
												],
												"src": "648:203:10"
											},
											{
												"body": {
													"nativeSrc": "937:103:10",
													"nodeType": "YulBlock",
													"src": "937:103:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "983:16:10",
																"nodeType": "YulBlock",
																"src": "983:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "992:1:10",
																					"nodeType": "YulLiteral",
																					"src": "992:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "995:1:10",
																					"nodeType": "YulLiteral",
																					"src": "995:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "985:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "985:6:10"
																			},
																			"nativeSrc": "985:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "985:12:10"
																		},
																		"nativeSrc": "985:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "985:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "958:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "958:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "967:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "967:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "954:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "954:3:10"
																		},
																		"nativeSrc": "954:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "954:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "979:2:10",
																		"nodeType": "YulLiteral",
																		"src": "979:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "950:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "950:3:10"
																},
																"nativeSrc": "950:32:10",
																"nodeType": "YulFunctionCall",
																"src": "950:32:10"
															},
															"nativeSrc": "947:52:10",
															"nodeType": "YulIf",
															"src": "947:52:10"
														},
														{
															"nativeSrc": "1008:26:10",
															"nodeType": "YulAssignment",
															"src": "1008:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1024:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1024:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1018:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1018:5:10"
																},
																"nativeSrc": "1018:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1018:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1008:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1008:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "856:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "903:9:10",
														"nodeType": "YulTypedName",
														"src": "903:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "914:7:10",
														"nodeType": "YulTypedName",
														"src": "914:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "926:6:10",
														"nodeType": "YulTypedName",
														"src": "926:6:10",
														"type": ""
													}
												],
												"src": "856:184:10"
											},
											{
												"body": {
													"nativeSrc": "1236:14:10",
													"nodeType": "YulBlock",
													"src": "1236:14:10",
													"statements": [
														{
															"nativeSrc": "1238:10:10",
															"nodeType": "YulAssignment",
															"src": "1238:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "1245:3:10",
																"nodeType": "YulIdentifier",
																"src": "1245:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1238:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1238:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1045:205:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1220:3:10",
														"nodeType": "YulTypedName",
														"src": "1220:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1228:3:10",
														"nodeType": "YulTypedName",
														"src": "1228:3:10",
														"type": ""
													}
												],
												"src": "1045:205:10"
											},
											{
												"body": {
													"nativeSrc": "1412:218:10",
													"nodeType": "YulBlock",
													"src": "1412:218:10",
													"statements": [
														{
															"nativeSrc": "1422:26:10",
															"nodeType": "YulAssignment",
															"src": "1422:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1434:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1434:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1445:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1445:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1430:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1430:3:10"
																},
																"nativeSrc": "1430:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1430:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1422:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:4:10"
																}
															]
														},
														{
															"nativeSrc": "1457:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1475:3:10",
																				"nodeType": "YulLiteral",
																				"src": "1475:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1480:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1480:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1471:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1471:3:10"
																		},
																		"nativeSrc": "1471:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1471:11:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1467:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1467:3:10"
																},
																"nativeSrc": "1467:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1467:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1461:2:10",
																	"nodeType": "YulTypedName",
																	"src": "1461:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1502:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1502:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1517:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1517:6:10"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1525:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1525:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1513:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:10"
																		},
																		"nativeSrc": "1513:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1513:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1495:6:10"
																},
																"nativeSrc": "1495:34:10",
																"nodeType": "YulFunctionCall",
																"src": "1495:34:10"
															},
															"nativeSrc": "1495:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "1495:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1549:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1549:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1560:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1560:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1545:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1545:3:10"
																		},
																		"nativeSrc": "1545:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1545:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1569:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1569:6:10"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1577:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "1577:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1565:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1565:3:10"
																		},
																		"nativeSrc": "1565:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1565:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1538:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1538:6:10"
																},
																"nativeSrc": "1538:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1538:43:10"
															},
															"nativeSrc": "1538:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "1538:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1601:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1601:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1612:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1612:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1597:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1597:3:10"
																		},
																		"nativeSrc": "1597:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1597:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "1617:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1617:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1590:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:10"
																},
																"nativeSrc": "1590:34:10",
																"nodeType": "YulFunctionCall",
																"src": "1590:34:10"
															},
															"nativeSrc": "1590:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "1590:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1255:375:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1365:9:10",
														"nodeType": "YulTypedName",
														"src": "1365:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1376:6:10",
														"nodeType": "YulTypedName",
														"src": "1376:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1384:6:10",
														"nodeType": "YulTypedName",
														"src": "1384:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1392:6:10",
														"nodeType": "YulTypedName",
														"src": "1392:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1403:4:10",
														"nodeType": "YulTypedName",
														"src": "1403:4:10",
														"type": ""
													}
												],
												"src": "1255:375:10"
											},
											{
												"body": {
													"nativeSrc": "1809:172:10",
													"nodeType": "YulBlock",
													"src": "1809:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1826:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1826:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1837:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1837:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1819:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:10"
																},
																"nativeSrc": "1819:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1819:21:10"
															},
															"nativeSrc": "1819:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1819:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1860:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1860:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1871:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1871:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1856:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1856:3:10"
																		},
																		"nativeSrc": "1856:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1856:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1876:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1876:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1849:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1849:6:10"
																},
																"nativeSrc": "1849:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1849:30:10"
															},
															"nativeSrc": "1849:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1849:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1899:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1899:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1910:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1910:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1895:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1895:3:10"
																		},
																		"nativeSrc": "1895:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1895:18:10"
																	},
																	{
																		"hexValue": "4d7573742062652070726f706f736564206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1915:24:10",
																		"nodeType": "YulLiteral",
																		"src": "1915:24:10",
																		"type": "",
																		"value": "Must be proposed owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1888:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:10"
																},
																"nativeSrc": "1888:52:10",
																"nodeType": "YulFunctionCall",
																"src": "1888:52:10"
															},
															"nativeSrc": "1888:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "1888:52:10"
														},
														{
															"nativeSrc": "1949:26:10",
															"nodeType": "YulAssignment",
															"src": "1949:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1961:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1961:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1972:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1972:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1957:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1957:3:10"
																},
																"nativeSrc": "1957:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1957:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1949:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1949:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1635:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1786:9:10",
														"nodeType": "YulTypedName",
														"src": "1786:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1800:4:10",
														"nodeType": "YulTypedName",
														"src": "1800:4:10",
														"type": ""
													}
												],
												"src": "1635:346:10"
											},
											{
												"body": {
													"nativeSrc": "2160:172:10",
													"nodeType": "YulBlock",
													"src": "2160:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2177:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2177:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2188:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2188:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2170:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2170:6:10"
																},
																"nativeSrc": "2170:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2170:21:10"
															},
															"nativeSrc": "2170:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2170:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2211:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2222:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2222:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2207:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:10"
																		},
																		"nativeSrc": "2207:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2207:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2227:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2227:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2200:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2200:6:10"
																},
																"nativeSrc": "2200:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2200:30:10"
															},
															"nativeSrc": "2200:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "2200:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2250:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2250:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2261:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2261:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2246:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2246:3:10"
																		},
																		"nativeSrc": "2246:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:18:10"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
																		"kind": "string",
																		"nativeSrc": "2266:24:10",
																		"nodeType": "YulLiteral",
																		"src": "2266:24:10",
																		"type": "",
																		"value": "Only callable by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2239:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:10"
																},
																"nativeSrc": "2239:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2239:52:10"
															},
															"nativeSrc": "2239:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2239:52:10"
														},
														{
															"nativeSrc": "2300:26:10",
															"nodeType": "YulAssignment",
															"src": "2300:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2312:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2312:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2323:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2323:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2308:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2308:3:10"
																},
																"nativeSrc": "2308:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2308:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2300:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2300:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1986:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2137:9:10",
														"nodeType": "YulTypedName",
														"src": "2137:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2151:4:10",
														"nodeType": "YulTypedName",
														"src": "2151:4:10",
														"type": ""
													}
												],
												"src": "1986:346:10"
											},
											{
												"body": {
													"nativeSrc": "2466:145:10",
													"nodeType": "YulBlock",
													"src": "2466:145:10",
													"statements": [
														{
															"nativeSrc": "2476:26:10",
															"nodeType": "YulAssignment",
															"src": "2476:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2488:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2488:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2499:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2484:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2484:3:10"
																},
																"nativeSrc": "2484:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2484:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2476:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2476:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2518:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2518:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2533:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2533:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2549:3:10",
																								"nodeType": "YulLiteral",
																								"src": "2549:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2554:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2554:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2545:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2545:3:10"
																						},
																						"nativeSrc": "2545:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2545:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2558:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2558:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2541:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:10"
																				},
																				"nativeSrc": "2541:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2541:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2529:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2529:3:10"
																		},
																		"nativeSrc": "2529:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2529:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2511:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:10"
																},
																"nativeSrc": "2511:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2511:51:10"
															},
															"nativeSrc": "2511:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2511:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2582:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2582:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2593:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2593:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2578:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2578:3:10"
																		},
																		"nativeSrc": "2578:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2578:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2598:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2571:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2571:6:10"
																},
																"nativeSrc": "2571:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2571:34:10"
															},
															"nativeSrc": "2571:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2571:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2337:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2427:9:10",
														"nodeType": "YulTypedName",
														"src": "2427:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2438:6:10",
														"nodeType": "YulTypedName",
														"src": "2438:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2446:6:10",
														"nodeType": "YulTypedName",
														"src": "2446:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2457:4:10",
														"nodeType": "YulTypedName",
														"src": "2457:4:10",
														"type": ""
													}
												],
												"src": "2337:274:10"
											},
											{
												"body": {
													"nativeSrc": "2790:173:10",
													"nodeType": "YulBlock",
													"src": "2790:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2807:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2807:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2818:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2818:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2800:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:10"
																},
																"nativeSrc": "2800:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2800:21:10"
															},
															"nativeSrc": "2800:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2800:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2841:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2841:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2852:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2852:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2837:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2837:3:10"
																		},
																		"nativeSrc": "2837:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2837:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2857:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2857:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2830:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2830:6:10"
																},
																"nativeSrc": "2830:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2830:30:10"
															},
															"nativeSrc": "2830:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "2830:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2880:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2880:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2891:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2891:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2876:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:10"
																		},
																		"nativeSrc": "2876:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2876:18:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "2896:25:10",
																		"nodeType": "YulLiteral",
																		"src": "2896:25:10",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2869:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2869:6:10"
																},
																"nativeSrc": "2869:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2869:53:10"
															},
															"nativeSrc": "2869:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "2869:53:10"
														},
														{
															"nativeSrc": "2931:26:10",
															"nodeType": "YulAssignment",
															"src": "2931:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2943:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2954:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2939:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:10"
																},
																"nativeSrc": "2939:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2939:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2931:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2616:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2767:9:10",
														"nodeType": "YulTypedName",
														"src": "2767:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2781:4:10",
														"nodeType": "YulTypedName",
														"src": "2781:4:10",
														"type": ""
													}
												],
												"src": "2616:347:10"
											},
											{
												"body": {
													"nativeSrc": "3046:199:10",
													"nodeType": "YulBlock",
													"src": "3046:199:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3092:16:10",
																"nodeType": "YulBlock",
																"src": "3092:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3101:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3101:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3104:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3104:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3094:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3094:6:10"
																			},
																			"nativeSrc": "3094:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3094:12:10"
																		},
																		"nativeSrc": "3094:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3094:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3067:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3067:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3076:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3063:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:10"
																		},
																		"nativeSrc": "3063:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3063:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3088:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3088:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:10"
																},
																"nativeSrc": "3059:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3059:32:10"
															},
															"nativeSrc": "3056:52:10",
															"nodeType": "YulIf",
															"src": "3056:52:10"
														},
														{
															"nativeSrc": "3117:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3117:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3136:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3136:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3130:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3130:5:10"
																},
																"nativeSrc": "3130:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3130:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3121:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3121:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3199:16:10",
																"nodeType": "YulBlock",
																"src": "3199:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3208:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3208:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3211:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3211:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3201:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3201:6:10"
																			},
																			"nativeSrc": "3201:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3201:12:10"
																		},
																		"nativeSrc": "3201:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3201:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3168:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3168:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3189:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "3189:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3182:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "3182:6:10"
																						},
																						"nativeSrc": "3182:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "3182:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3175:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "3175:6:10"
																				},
																				"nativeSrc": "3175:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3175:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3165:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3165:2:10"
																		},
																		"nativeSrc": "3165:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3165:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3158:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3158:6:10"
																},
																"nativeSrc": "3158:40:10",
																"nodeType": "YulFunctionCall",
																"src": "3158:40:10"
															},
															"nativeSrc": "3155:60:10",
															"nodeType": "YulIf",
															"src": "3155:60:10"
														},
														{
															"nativeSrc": "3224:15:10",
															"nodeType": "YulAssignment",
															"src": "3224:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3234:5:10",
																"nodeType": "YulIdentifier",
																"src": "3234:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3224:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2968:277:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3012:9:10",
														"nodeType": "YulTypedName",
														"src": "3012:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3023:7:10",
														"nodeType": "YulTypedName",
														"src": "3023:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3035:6:10",
														"nodeType": "YulTypedName",
														"src": "3035:6:10",
														"type": ""
													}
												],
												"src": "2968:277:10"
											},
											{
												"body": {
													"nativeSrc": "3387:275:10",
													"nodeType": "YulBlock",
													"src": "3387:275:10",
													"statements": [
														{
															"nativeSrc": "3397:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3397:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3417:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3417:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3411:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3411:5:10"
																},
																"nativeSrc": "3411:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3411:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3401:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3401:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3433:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3433:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3442:1:10",
																"nodeType": "YulLiteral",
																"src": "3442:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3437:1:10",
																	"nodeType": "YulTypedName",
																	"src": "3437:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3504:77:10",
																"nodeType": "YulBlock",
																"src": "3504:77:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "3529:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3529:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "3534:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "3534:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3525:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3525:3:10"
																					},
																					"nativeSrc": "3525:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3525:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "3552:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "3552:6:10"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "3560:1:10",
																											"nodeType": "YulIdentifier",
																											"src": "3560:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "3548:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "3548:3:10"
																									},
																									"nativeSrc": "3548:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "3548:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3564:4:10",
																									"nodeType": "YulLiteral",
																									"src": "3564:4:10",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3544:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "3544:3:10"
																							},
																							"nativeSrc": "3544:25:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3544:25:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3538:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3538:5:10"
																					},
																					"nativeSrc": "3538:32:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3538:32:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3518:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3518:6:10"
																			},
																			"nativeSrc": "3518:53:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3518:53:10"
																		},
																		"nativeSrc": "3518:53:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3518:53:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3463:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3463:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3466:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3466:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3460:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3460:2:10"
																},
																"nativeSrc": "3460:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3460:13:10"
															},
															"nativeSrc": "3452:129:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3474:21:10",
																"nodeType": "YulBlock",
																"src": "3474:21:10",
																"statements": [
																	{
																		"nativeSrc": "3476:17:10",
																		"nodeType": "YulAssignment",
																		"src": "3476:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3485:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "3485:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3488:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3488:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3481:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3481:3:10"
																			},
																			"nativeSrc": "3481:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3481:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3476:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3476:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3456:3:10",
																"nodeType": "YulBlock",
																"src": "3456:3:10",
																"statements": []
															},
															"src": "3452:129:10"
														},
														{
															"nativeSrc": "3590:26:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3590:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3604:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3604:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3609:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3609:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3600:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3600:3:10"
																},
																"nativeSrc": "3600:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3600:16:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3594:2:10",
																	"nodeType": "YulTypedName",
																	"src": "3594:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3632:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "3632:2:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3636:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3636:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3625:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3625:6:10"
																},
																"nativeSrc": "3625:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3625:13:10"
															},
															"nativeSrc": "3625:13:10",
															"nodeType": "YulExpressionStatement",
															"src": "3625:13:10"
														},
														{
															"nativeSrc": "3647:9:10",
															"nodeType": "YulAssignment",
															"src": "3647:9:10",
															"value": {
																"name": "_1",
																"nativeSrc": "3654:2:10",
																"nodeType": "YulIdentifier",
																"src": "3654:2:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3647:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3647:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3250:412:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3363:3:10",
														"nodeType": "YulTypedName",
														"src": "3363:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3368:6:10",
														"nodeType": "YulTypedName",
														"src": "3368:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3379:3:10",
														"nodeType": "YulTypedName",
														"src": "3379:3:10",
														"type": ""
													}
												],
												"src": "3250:412:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must be proposed owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only callable by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot transfer to self\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80633aeac4e11461005c57806351cff8d91461007157806379ba5097146100845780638da5cb5b1461008c578063f2fde38b146100ab575b600080fd5b61006f61006a3660046105ed565b6100be565b005b61006f61007f366004610620565b61016d565b61006f610229565b600054604080516001600160a01b039092168252519081900360200190f35b61006f6100b9366004610620565b6102d3565b6100c66102e7565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561010d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610131919061063b565b90508060000361015457604051630686827b60e51b815260040160405180910390fd5b6101686001600160a01b038316848361033c565b505050565b6101756102e7565b47600081900361019857604051630686827b60e51b815260040160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b505090508061016857604051639d11f56360e01b81523360048201526001600160a01b0384166024820152604481018390526064015b60405180910390fd5b6001546001600160a01b0316331461027c5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606401610220565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6102db6102e7565b6102e48161038e565b50565b6000546001600160a01b0316331461033a5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610220565b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610168908490610437565b336001600160a01b038216036103e65760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610220565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600061044c6001600160a01b0384168361049a565b9050805160001415801561047157508080602001905181019061046f9190610654565b155b1561016857604051635274afe760e01b81526001600160a01b0384166004820152602401610220565b60606104a8838360006104af565b9392505050565b6060814710156104d45760405163cd78605960e01b8152306004820152602401610220565b600080856001600160a01b031684866040516104f09190610676565b60006040518083038185875af1925050503d806000811461052d576040519150601f19603f3d011682016040523d82523d6000602084013e610532565b606091505b509150915061054286838361054c565b9695505050505050565b6060826105615761055c826105a8565b6104a8565b815115801561057857506001600160a01b0384163b155b156105a157604051639996b31560e01b81526001600160a01b0385166004820152602401610220565b50806104a8565b8051156105b85780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b03811681146105e857600080fd5b919050565b6000806040838503121561060057600080fd5b610609836105d1565b9150610617602084016105d1565b90509250929050565b60006020828403121561063257600080fd5b6104a8826105d1565b60006020828403121561064d57600080fd5b5051919050565b60006020828403121561066657600080fd5b815180151581146104a857600080fd5b6000825160005b81811015610697576020818601810151858301520161067d565b50600092019182525091905056fea2646970667358221220171f5c896e0e2f6d004781b80f4db687152908f041b2130f766e5f1070e3319c64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AEAC4E1 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x16D JUMP JUMPDEST PUSH2 0x6F PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x620 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x63B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x168 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 DUP4 PUSH2 0x33C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2E7 JUMP JUMPDEST SELFBALANCE PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9D11F563 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x2E7 JUMP JUMPDEST PUSH2 0x2E4 DUP2 PUSH2 0x38E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x168 SWAP1 DUP5 SWAP1 PUSH2 0x437 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x49A JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x471 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x654 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4A8 DUP4 DUP4 PUSH1 0x0 PUSH2 0x4AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x52D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x532 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x542 DUP7 DUP4 DUP4 PUSH2 0x54C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x561 JUMPI PUSH2 0x55C DUP3 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x220 JUMP JUMPDEST POP DUP1 PUSH2 0x4A8 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x5B8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x609 DUP4 PUSH2 0x5D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x617 PUSH1 0x20 DUP5 ADD PUSH2 0x5D1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A8 DUP3 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x697 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x67D JUMP JUMPDEST POP PUSH1 0x0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0x1F TLOAD DUP10 PUSH15 0xE2F6D004781B80F4DB687152908F0 COINBASE 0xB2 SGT 0xF PUSH23 0x6E5F1070E3319C64736F6C634300081800330000000000 ",
							"sourceMap": "487:767:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:265;;;;;;:::i;:::-;;:::i;:::-;;671:310;;;;;;:::i;:::-;;:::i;1022:312:1:-;;;:::i;1374:81::-;1421:7;1443;1374:81;;;-1:-1:-1;;;;;1443:7:1;;;794:51:10;;1374:81:1;;;;;782:2:10;1374:81:1;;;843:98;;;;;;:::i;:::-;;:::i;987:265:9:-;2059:20:1;:18;:20::i;:::-;1092:39:9::1;::::0;-1:-1:-1;;;1092:39:9;;1125:4:::1;1092:39;::::0;::::1;794:51:10::0;1075:14:9::1;::::0;-1:-1:-1;;;;;1092:24:9;::::1;::::0;::::1;::::0;767:18:10;;1092:39:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1075:56;;1146:6;1156:1;1146:11:::0;1142:43:::1;;1166:19;;-1:-1:-1::0;;;1166:19:9::1;;;;;;;;;;;1142:43;1196:49;-1:-1:-1::0;;;;;1196:27:9;::::1;1224:12:::0;1238:6;1196:27:::1;:49::i;:::-;1065:187;987:265:::0;;:::o;671:310::-;2059:20:1;:18;:20::i;:::-;755:21:9::1;738:14;791:11:::0;;;787:43:::1;;811:19;;-1:-1:-1::0;;;811:19:9::1;;;;;;;;;;;787:43;842:9;856:12;-1:-1:-1::0;;;;;856:17:9::1;881:6;856:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;841:51;;;908:4;903:71;;921:53;::::0;-1:-1:-1;;;921:53:9;;941:10:::1;921:53;::::0;::::1;1495:34:10::0;-1:-1:-1;;;;;1565:15:10;;1545:18;;;1538:43;1597:18;;;1590:34;;;1430:18;;921:53:9::1;;;;;;;;1022:312:1::0;1142:14;;-1:-1:-1;;;;;1142:14:1;1128:10;:28;1120:63;;;;-1:-1:-1;;;1120:63:1;;1837:2:10;1120:63:1;;;1819:21:10;1876:2;1856:18;;;1849:30;-1:-1:-1;;;1895:18:10;;;1888:52;1957:18;;1120:63:1;1635:346:10;1120:63:1;1190:16;1209:7;;1232:10;-1:-1:-1;;;;;;1222:20:1;;;;;;;-1:-1:-1;1248:27:1;;;;;;;1287:42;;-1:-1:-1;;;;;1209:7:1;;;;1232:10;;1209:7;;1287:42;;;1067:267;1022:312::o;843:98::-;2059:20;:18;:20::i;:::-;914:22:::1;933:2;914:18;:22::i;:::-;843:98:::0;:::o;1797:158::-;1916:7;;-1:-1:-1;;;;;1916:7:1;1902:10;:21;1894:56;;;;-1:-1:-1;;;1894:56:1;;2188:2:10;1894:56:1;;;2170:21:10;2227:2;2207:18;;;2200:30;-1:-1:-1;;;2246:18:10;;;2239:52;2308:18;;1894:56:1;1986:346:10;1894:56:1;1797:158::o;1303:160:7:-;1412:43;;;-1:-1:-1;;;;;2529:32:10;;1412:43:7;;;2511:51:10;2578:18;;;;2571:34;;;1412:43:7;;;;;;;;;;2484:18:10;;;;1412:43:7;;;;;;;;-1:-1:-1;;;;;1412:43:7;-1:-1:-1;;;1412:43:7;;;1385:71;;1405:5;;1385:19;:71::i;1528:235:1:-;1643:10;-1:-1:-1;;;;;1637:16:1;;;1629:52;;;;-1:-1:-1;;;1629:52:1;;2818:2:10;1629:52:1;;;2800:21:10;2857:2;2837:18;;;2830:30;2896:25;2876:18;;;2869:53;2939:18;;1629:52:1;2616:347:10;1629:52:1;1688:14;:19;;-1:-1:-1;;;;;;1688:19:1;-1:-1:-1;;;;;1688:19:1;;;;;;;;;-1:-1:-1;1746:7:1;;1719:39;;1688:19;;1746:7;;1719:39;;-1:-1:-1;1719:39:1;1528:235;:::o;4059:629:7:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:7;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:7;;-1:-1:-1;;;;;812:32:10;;4631:40:7;;;794:51:10;767:18;;4631:40:7;648:203:10;2705:151:8;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;2705:151;-1:-1:-1;;;2705:151:8:o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:8;;3394:4;3359:41;;;794:51:10;767:18;;3359:41:8;648:203:10;3303:108:8;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:8;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:8:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:8;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:8;;-1:-1:-1;;;;;812:32:10;;5121:24:8;;;794:51:10;767:18;;5121:24:8;648:203:10;5041:119:8;-1:-1:-1;5180:10:8;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:8;;;;;;;;;;;14:173:10;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;457:186::-;516:6;569:2;557:9;548:7;544:23;540:32;537:52;;;585:1;582;575:12;537:52;608:29;627:9;608:29;:::i;856:184::-;926:6;979:2;967:9;958:7;954:23;950:32;947:52;;;995:1;992;985:12;947:52;-1:-1:-1;1018:16:10;;856:184;-1:-1:-1;856:184:10:o;2968:277::-;3035:6;3088:2;3076:9;3067:7;3063:23;3059:32;3056:52;;;3104:1;3101;3094:12;3056:52;3136:9;3130:16;3189:5;3182:13;3175:21;3168:5;3165:32;3155:60;;3211:1;3208;3201:12;3250:412;3379:3;3417:6;3411:13;3442:1;3452:129;3466:6;3463:1;3460:13;3452:129;;;3564:4;3548:14;;;3544:25;;3538:32;3525:11;;;3518:53;3481:12;3452:129;;;-1:-1:-1;3636:1:10;3600:16;;3625:13;;;-1:-1:-1;3600:16:10;3250:412;-1:-1:-1;3250:412:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "351000",
								"executionCost": "24721",
								"totalCost": "375721"
							},
							"external": {
								"acceptOwnership()": "52321",
								"owner()": "2336",
								"transferOwnership(address)": "30502",
								"withdraw(address)": "infinite",
								"withdrawToken(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 487,
									"end": 1254,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 291,
									"end": 301,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 291,
									"end": 301,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 373,
									"end": 374,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 301,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 294,
									"end": 320,
									"name": "PUSH",
									"source": 10,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 267,
									"end": 321,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 338,
									"end": 356,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 338,
									"end": 356,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 586,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 586,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 586,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 652,
									"end": 659,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 652,
									"end": 670,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 680,
									"end": 706,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 676,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 676,
									"end": 755,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 716,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 735,
									"end": 747,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 716,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 716,
									"end": 748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 716,
									"end": 748,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 716,
									"end": 748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 481,
									"end": 759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 298,
									"end": 379,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1643,
									"end": 1653,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1653,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 569,
									"end": 571,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 551,
									"end": 572,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 608,
									"end": 610,
									"name": "PUSH",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 588,
									"end": 606,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 581,
									"end": 611,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 647,
									"end": 672,
									"name": "PUSH",
									"source": 10,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 627,
									"end": 645,
									"name": "PUSH",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 627,
									"end": 645,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 627,
									"end": 645,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 620,
									"end": 673,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 690,
									"end": 708,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 690,
									"end": 708,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 367,
									"end": 714,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1629,
									"end": 1681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1707,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 1753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 1719,
									"end": 1758,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1763,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 367,
									"end": 714,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 367,
									"end": 714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 1254,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220171f5c896e0e2f6d004781b80f4db687152908f041b2130f766e5f1070e3319c64736f6c63430008180033",
									".code": [
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "3AEAC4E1"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "51CFF8D9"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "79BA5097"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 487,
											"end": 1254,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 987,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 987,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 671,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 671,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 671,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 671,
											"end": 981,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 671,
											"end": 981,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 671,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 671,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 671,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 671,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 671,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1022,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 794,
											"end": 845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 794,
											"end": 845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1455,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2059,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1131,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1092,
											"end": 1131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1129,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1092,
											"end": 1131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 794,
											"end": 845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1092,
											"end": 1116,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1116,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1092,
											"end": 1116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1131,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1092,
											"end": 1131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1092,
											"end": 1131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1075,
											"end": 1131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1157,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1142,
											"end": 1185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1142,
											"end": 1185,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "686827B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1185,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1142,
											"end": 1185,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1142,
											"end": 1185,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1223,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1224,
											"end": 1236,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1196,
											"end": 1245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1196,
											"end": 1245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1065,
											"end": 1252,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 671,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 671,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2059,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 755,
											"end": 776,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 738,
											"end": 752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 791,
											"end": 802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 802,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 787,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 830,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "686827B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 811,
											"end": 830,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 787,
											"end": 830,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 830,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 868,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 856,
											"end": 873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 881,
											"end": 887,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 856,
											"end": 892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 841,
											"end": 892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 908,
											"end": 912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 903,
											"end": 974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 903,
											"end": 974,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 974,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9D11F563"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 921,
											"end": 974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 941,
											"end": 951,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 921,
											"end": 974,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1529,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1580,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1565,
											"end": 1580,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1615,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1597,
											"end": 1615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1448,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1430,
											"end": 1448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 921,
											"end": 974,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1022,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1142,
											"end": 1156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1138,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1156,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1840,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1878,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1879,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26BAB9BA10313290383937B837B9B2B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1888,
											"end": 1940,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1635,
											"end": 1981,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1120,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1275,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1329,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 843,
											"end": 941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2059,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2059,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 933,
											"end": 935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 914,
											"end": 936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 914,
											"end": 936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1955,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1797,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2190,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9031B0B63630B1363290313C9037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1986,
											"end": 2332,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1894,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2529,
											"end": 2561,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2561,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2605,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2605,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2571,
											"end": 2605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1653,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1653,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2820,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2859,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2837,
											"end": 2855,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2837,
											"end": 2855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2896,
											"end": 2921,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2616,
											"end": 2963,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1629,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1758,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 812,
											"end": 844,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 812,
											"end": 844,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 794,
											"end": 845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 648,
											"end": 851,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD786059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 794,
											"end": 845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 648,
											"end": 851,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 812,
											"end": 844,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 812,
											"end": 844,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 794,
											"end": 845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 648,
											"end": 851,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 452,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 440,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 427,
											"end": 445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 408,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 408,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 408,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 398,
											"end": 446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 398,
											"end": 446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 457,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 457,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 571,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 566,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 548,
											"end": 555,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 544,
											"end": 567,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 540,
											"end": 572,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 537,
											"end": 589,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 537,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 537,
											"end": 589,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 585,
											"end": 586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 583,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 575,
											"end": 587,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 537,
											"end": 589,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 537,
											"end": 589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 608,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 627,
											"end": 636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 608,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 608,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 856,
											"end": 1040,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 856,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 926,
											"end": 932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 958,
											"end": 965,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 954,
											"end": 977,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 950,
											"end": 982,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 947,
											"end": 999,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 947,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 947,
											"end": 999,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 995,
											"end": 996,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 993,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 985,
											"end": 997,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 947,
											"end": 999,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 947,
											"end": 999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1018,
											"end": 1034,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1018,
											"end": 1034,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 856,
											"end": 1040,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 856,
											"end": 1040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3245,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2968,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3035,
											"end": 3041,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3074,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3063,
											"end": 3086,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3091,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3106,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3056,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3189,
											"end": 3194,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3195,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3168,
											"end": 3173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3197,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 3155,
											"end": 3215,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3211,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3209,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3201,
											"end": 3213,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3250,
											"end": 3662,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 3250,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3379,
											"end": 3382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3423,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3411,
											"end": 3424,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3581,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3452,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3473,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3581,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3452,
											"end": 3581,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3564,
											"end": 3568,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3562,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3538,
											"end": 3570,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3452,
											"end": 3581,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3452,
											"end": 3581,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3452,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3636,
											"end": 3637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3616,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3600,
											"end": 3616,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3250,
											"end": 3662,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3250,
											"end": 3662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
								"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"utils/Withdraw.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9",
							"withdrawToken(address,address)": "3aeac4e1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedToWithdrawEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToWithdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY. THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE. DO NOT USE THIS CODE IN PRODUCTION.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/Withdraw.sol\":\"Withdraw\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x927e505bb87a58ea04d1a9efe945f4bf4093e88b618b6fede3b9c68e1e63d989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f41d2c6eb2e11b9952350013d2fd57ec44c01f60fc33855bdb8d84ad352008\",\"dweb:/ipfs/Qmbi7J7LZzvy8imXMfYpRMiKtr9ewcAHfeE4s3zLm11QY4\"]},\"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":{\"keccak256\":\"0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c69fab5eea1c0448f856a51d7e5736454fe5cc083d36c60bf3ee23bb3d0e8e\",\"dweb:/ipfs/QmP4fYQ9k7xeZms6cwnqnQuuAkRkeE2TWewyvCD8Mrc2DZ\"]},\"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"utils/Withdraw.sol\":{\"keccak256\":\"0x0626df59932d25184839f6a928557984fcd7ff2cad4cc5be426b9e84e59e609d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c23dd7c946f6d491ac23bb5d047ddec2f7fbeb0919394d8c6a15abd6fd890e88\",\"dweb:/ipfs/QmZPZHwqd1jtAWiSazTwNGoxnMCYYaqt6uzcmhHgUoXVFM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "utils/Withdraw.sol:Withdraw",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 31,
								"contract": "utils/Withdraw.sol:Withdraw",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address."
							}
						},
						"notice": "THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY. THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE. DO NOT USE THIS CODE IN PRODUCTION.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol",
					"exportedSymbols": {
						"ConfirmedOwner": [
							20
						],
						"ConfirmedOwnerWithProposal": [
							183
						]
					},
					"id": 21,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
							"file": "./ConfirmedOwnerWithProposal.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 21,
							"sourceUnit": 184,
							"src": "57:76:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ConfirmedOwnerWithProposal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 183,
										"src": "65:26:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "ConfirmedOwnerWithProposal",
										"nameLocations": [
											"267:26:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 183,
										"src": "267:26:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "267:26:0"
								}
							],
							"canonicalName": "ConfirmedOwner",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "135:105:0",
								"text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
							},
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20,
								183,
								215
							],
							"name": "ConfirmedOwner",
							"nameLocation": "249:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "377:2:0",
										"statements": []
									},
									"id": 19,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 11,
													"name": "newOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "355:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 12,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "365:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "365:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 16,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 10,
												"name": "ConfirmedOwnerWithProposal",
												"nameLocations": [
													"328:26:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "328:26:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "328:48:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "310:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:18:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "377:0:0"
									},
									"scope": 20,
									"src": "298:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 21,
							"src": "240:141:0",
							"usedErrors": [],
							"usedEvents": [
								37,
								43
							]
						}
					],
					"src": "32:350:0"
				},
				"id": 0
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
					"exportedSymbols": {
						"ConfirmedOwnerWithProposal": [
							183
						],
						"IOwnable": [
							215
						]
					},
					"id": 184,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol",
							"file": "../interfaces/IOwnable.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 184,
							"sourceUnit": 216,
							"src": "57:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 23,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 215,
										"src": "65:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 26,
										"name": "IOwnable",
										"nameLocations": [
											"255:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 215,
										"src": "255:8:1"
									},
									"id": 27,
									"nodeType": "InheritanceSpecifier",
									"src": "255:8:1"
								}
							],
							"canonicalName": "ConfirmedOwnerWithProposal",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 25,
								"nodeType": "StructuredDocumentation",
								"src": "111:105:1",
								"text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
							},
							"fullyImplemented": true,
							"id": 183,
							"linearizedBaseContracts": [
								183,
								215
							],
							"name": "ConfirmedOwnerWithProposal",
							"nameLocation": "225:26:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "s_owner",
									"nameLocation": "284:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 183,
									"src": "268:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "268:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "s_pendingOwner",
									"nameLocation": "311:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 183,
									"src": "295:30:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "295:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278",
									"id": 37,
									"name": "OwnershipTransferRequested",
									"nameLocation": "336:26:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "379:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "363:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "401:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "385:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:42:1"
									},
									"src": "330:75:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 43,
									"name": "OwnershipTransferred",
									"nameLocation": "414:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "451:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "435:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "473:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "457:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "434:42:1"
									},
									"src": "408:69:1"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "533:226:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 51,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "594:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "614:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "606:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 52,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "606:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "606:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "594:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "618:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																"typeString": "literal_string \"Cannot set owner to zero\""
															},
															"value": "Cannot set owner to zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																"typeString": "literal_string \"Cannot set owner to zero\""
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "586:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "586:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "586:59:1"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 60,
														"name": "s_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "652:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 61,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "662:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "652:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "652:18:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 64,
														"name": "pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "680:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "704:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "696:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 65,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "696:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "696:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "680:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "676:79:1",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "708:47:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 71,
																		"name": "pendingOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "735:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 70,
																	"name": "_transferOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "716:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "716:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "716:32:1"
														}
													]
												}
											}
										]
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "501:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "493:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "519:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "511:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:40:1"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:0:1"
									},
									"scope": 183,
									"src": "481:278:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										211
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "908:33:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "933:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "914:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "914:22:1"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "763:77:1",
										"text": "@notice Allows an owner to begin transferring ownership to a new address."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 84,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 83,
												"name": "onlyOwner",
												"nameLocations": [
													"898:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "898:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "898:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "852:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 82,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "889:8:1"
									},
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "878:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "870:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:12:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:0:1"
									},
									"scope": 183,
									"src": "843:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										214
									],
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1067:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 97,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1128:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1132:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1128:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "s_pendingOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "1142:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1128:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742062652070726f706f736564206f776e6572",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1158:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																"typeString": "literal_string \"Must be proposed owner\""
															},
															"value": "Must be proposed owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																"typeString": "literal_string \"Must be proposed owner\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1120:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1120:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1120:63:1"
											},
											{
												"assignments": [
													105
												],
												"declarations": [
													{
														"constant": false,
														"id": 105,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1198:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 126,
														"src": "1190:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 104,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"id": 106,
													"name": "s_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1190:26:1"
											},
											{
												"expression": {
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 108,
														"name": "s_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1222:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 109,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1232:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1236:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1232:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1222:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1222:20:1"
											},
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "s_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1248:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1273:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1265:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1265:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1265:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1248:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1248:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 121,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1308:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1318:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1322:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1318:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 120,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1287:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "EmitStatement",
												"src": "1282:47:1"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "945:74:1",
										"text": "@notice Allows an ownership transfer to be completed by the recipient."
									},
									"functionSelector": "79ba5097",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "1031:15:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1058:8:1"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:1"
									},
									"scope": 183,
									"src": "1022:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										206
									],
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1430:25:1",
										"statements": [
											{
												"expression": {
													"id": 134,
													"name": "s_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 133,
												"id": 135,
												"nodeType": "Return",
												"src": "1436:14:1"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "1338:33:1",
										"text": "@notice Get the current owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1383:5:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1403:8:1"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1388:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1421:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:9:1"
									},
									"scope": 183,
									"src": "1374:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1576:187:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1637:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 145,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1643:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1647:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1643:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1637:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1655:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																"typeString": "literal_string \"Cannot transfer to self\""
															},
															"value": "Cannot transfer to self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																"typeString": "literal_string \"Cannot transfer to self\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1629:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1629:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1629:52:1"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 151,
														"name": "s_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1688:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 152,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "1705:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1688:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1688:19:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 156,
															"name": "s_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1746:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1755:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "OwnershipTransferRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1719:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1719:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "EmitStatement",
												"src": "1714:44:1"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "1459:66:1",
										"text": "@notice validate, transfer ownership, and emit relevant events"
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1537:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1564:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1556:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:12:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:0:1"
									},
									"scope": 183,
									"src": "1528:235:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1841:114:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 166,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1902:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1906:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1902:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 168,
																"name": "s_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1916:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1902:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1925:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																"typeString": "literal_string \"Only callable by owner\""
															},
															"value": "Only callable by owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																"typeString": "literal_string \"Only callable by owner\""
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1894:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1894:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1894:56:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1767:27:1",
										"text": "@notice validate access"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOwnership",
									"nameLocation": "1806:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1824:2:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 183,
									"src": "1797:158:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "2053:38:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 177,
														"name": "_validateOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2059:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2059:20:1"
											},
											{
												"id": 180,
												"nodeType": "PlaceholderStatement",
												"src": "2085:1:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "1959:70:1",
										"text": "@notice Reverts if called by anyone other than the contract owner."
									},
									"id": 182,
									"name": "onlyOwner",
									"nameLocation": "2041:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2050:2:1"
									},
									"src": "2032:59:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 184,
							"src": "216:1877:1",
							"usedErrors": [],
							"usedEvents": [
								37,
								43
							]
						}
					],
					"src": "32:2062:1"
				},
				"id": 1
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
					"exportedSymbols": {
						"ConfirmedOwner": [
							20
						],
						"OwnerIsCreator": [
							199
						]
					},
					"id": 200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 185,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol",
							"file": "./ConfirmedOwner.sol",
							"id": 187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 21,
							"src": "57:52:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 186,
										"name": "ConfirmedOwner",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 20,
										"src": "65:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 189,
										"name": "ConfirmedOwner",
										"nameLocations": [
											"243:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "243:14:2"
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "243:14:2"
								}
							],
							"canonicalName": "OwnerIsCreator",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 188,
								"nodeType": "StructuredDocumentation",
								"src": "111:105:2",
								"text": "@title The OwnerIsCreator contract\n @notice A contract with helpers for basic contract ownership."
							},
							"fullyImplemented": true,
							"id": 199,
							"linearizedBaseContracts": [
								199,
								20,
								183,
								215
							],
							"name": "OwnerIsCreator",
							"nameLocation": "225:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "303:2:2",
										"statements": []
									},
									"id": 198,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 193,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "291:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "295:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "291:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 195,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 192,
												"name": "ConfirmedOwner",
												"nameLocations": [
													"276:14:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 20,
												"src": "276:14:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "276:26:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:2:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:0:2"
									},
									"scope": 199,
									"src": "262:43:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 200,
							"src": "216:91:2",
							"usedErrors": [],
							"usedEvents": [
								37,
								43
							]
						}
					],
					"src": "32:276:2"
				},
				"id": 2
			},
			"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							215
						]
					},
					"id": 216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 215,
							"linearizedBaseContracts": [
								215
							],
							"name": "IOwnable",
							"nameLocation": "67:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8da5cb5b",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "89:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "94:2:3"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "115:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:9:3"
									},
									"scope": 215,
									"src": "80:44:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f2fde38b",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "137:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "163:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "155:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:19:3"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:0:3"
									},
									"scope": 215,
									"src": "128:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79ba5097",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "196:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:3"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:0:3"
									},
									"scope": 215,
									"src": "187:36:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 216,
							"src": "57:168:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:194:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							297
						]
					},
					"id": 220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 220,
							"sourceUnit": 298,
							"src": "131:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 218,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 297,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							297
						]
					},
					"id": 298,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 221,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 297,
							"linearizedBaseContracts": [
								297
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 231,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 240,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 297,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 297,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 297,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 297,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 297,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 297,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 298,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								231,
								240
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							333
						]
					},
					"id": 334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 299,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 300,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:6",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 333,
							"linearizedBaseContracts": [
								333
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:6",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "3022:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "3045:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "3070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "3093:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "3119:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 310,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "3136:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "3155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:6"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:6"
									},
									"scope": 333,
									"src": "2997:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:6",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3501:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:6"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3539:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:6"
									},
									"scope": 333,
									"src": "3485:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:6",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:6"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3791:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:6"
									},
									"scope": 333,
									"src": "3740:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 334,
							"src": "2113:1689:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							876
						],
						"IERC20": [
							297
						],
						"IERC20Permit": [
							333
						],
						"SafeERC20": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 335,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 298,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 336,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 297,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 334,
							"src": "179:60:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 338,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 333,
										"src": "187:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 877,
							"src": "240:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 340,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 876,
										"src": "248:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 342,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 345,
									"libraryName": {
										"id": 343,
										"name": "Address",
										"nameLocations": [
											"781:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 876,
										"src": "781:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:7",
									"typeName": {
										"id": 344,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:7",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 350,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "907:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:7"
									},
									"src": "876:46:7"
								},
								{
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 359,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1043:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1060:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1086:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:7"
									},
									"src": "1004:109:7"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1375:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 371,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "1405:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$297",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 374,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$297",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 264,
																	"src": "1427:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 376,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "1444:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 377,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "1448:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 378,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 372,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$297",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 370,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "1385:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$297_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:7"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1325:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$297",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 297,
														"src": "1325:6:7"
													},
													"referencedDeclaration": 297,
													"src": "1325:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$297",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1339:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "1351:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:7"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:7"
									},
									"scope": 623,
									"src": "1303:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1792:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 397,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "1822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$297",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 400,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "1844:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$297",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 296,
																	"src": "1844:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 402,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 389,
																			"src": "1865:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 403,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "1871:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 404,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "1875:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 398,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$297",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 396,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "1802:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$297_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:7"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1728:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$297",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 386,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 385,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 297,
														"src": "1728:6:7"
													},
													"referencedDeclaration": 297,
													"src": "1728:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$297",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1742:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1756:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1768:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:7"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:7"
									},
									"scope": 623,
									"src": "1702:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2167:139:7",
										"statements": [
											{
												"assignments": [
													422
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "2177:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 427,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$623",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$623",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 425,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2231:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 423,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "2200:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$297",
																"typeString": "contract IERC20"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 274,
														"src": "2200:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 433,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "2262:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$297",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 434,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2269:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 435,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "2278:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 436,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "2293:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$297",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 432,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2249:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$297_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:7"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2112:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$297",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 413,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 412,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 297,
														"src": "2112:6:7"
													},
													"referencedDeclaration": 297,
													"src": "2112:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$297",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2126:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2143:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:7"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:7"
									},
									"scope": 623,
									"src": "2081:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "2607:370:7",
										"statements": [
											{
												"id": 482,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:7",
												"statements": [
													{
														"assignments": [
															453
														],
														"declarations": [
															{
																"constant": false,
																"id": 453,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 482,
																"src": "2641:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 452,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 462,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 458,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$623",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$623",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 456,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 460,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "2699:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 454,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "2668:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$297",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 274,
																"src": "2668:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 463,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "2725:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 464,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "2744:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 473,
														"nodeType": "IfStatement",
														"src": "2721:160:7",
														"trueBody": {
															"id": 472,
															"nodeType": "Block",
															"src": "2763:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 467,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "2821:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 468,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "2830:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 469,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 449,
																				"src": "2848:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 466,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "2788:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 471,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 475,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "2907:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$297",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 476,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "2914:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 477,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "2923:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 478,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "2942:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$297",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 474,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "2894:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$297_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 481,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2540:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$297",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 444,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 443,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 297,
														"src": "2540:6:7"
													},
													"referencedDeclaration": 297,
													"src": "2540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$297",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2554:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2571:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:7"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:7"
									},
									"scope": 623,
									"src": "2509:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "3373:303:7",
										"statements": [
											{
												"assignments": [
													496
												],
												"declarations": [
													{
														"constant": false,
														"id": 496,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 530,
														"src": "3383:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 495,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 499,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "3426:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$297",
																	"typeString": "contract IERC20"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 284,
															"src": "3426:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 501,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "3442:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "3451:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 503,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 497,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:7"
											},
											{
												"condition": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 507,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "3498:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$297",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 508,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "3505:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$297",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 506,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "3474:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$297_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 529,
												"nodeType": "IfStatement",
												"src": "3469:201:7",
												"trueBody": {
													"id": 528,
													"nodeType": "Block",
													"src": "3520:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 512,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "3554:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$297",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 488,
																					"src": "3576:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$297",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 284,
																				"src": "3576:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 517,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 490,
																						"src": "3592:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 518,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 519,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 513,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$297",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 511,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "3534:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$297_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 522,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 524,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "3639:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$297",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 525,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "3646:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$297",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 523,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "3619:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$297_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 527,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3318:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$297",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 487,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 486,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 297,
														"src": "3318:6:7"
													},
													"referencedDeclaration": 297,
													"src": "3318:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$297",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3332:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3349:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:7"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:7"
									},
									"scope": 623,
									"src": "3296:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4129:559:7",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "4478:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 540,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4532:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 544,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "4512:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$297",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$297",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 542,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:7",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 697,
														"src": "4504:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 550,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "4551:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 556,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "4589:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 557,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:7",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 559,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 554,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:7",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "4547:135:7",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "4610:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 566,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 535,
																				"src": "4664:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$297",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$297",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "4631:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "4624:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4088:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$297",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 533,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 297,
														"src": "4088:6:7"
													},
													"referencedDeclaration": 297,
													"src": "4088:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$297",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4102:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:7"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:7"
									},
									"scope": 623,
									"src": "4059:629:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "5278:489:7",
										"statements": [
											{
												"assignments": [
													585,
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "5574:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 584,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "5588:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 586,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5635:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5623:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$297",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$297",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 588,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:7",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 596,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "5657:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 597,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "5669:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:7",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 603,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "5706:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 605,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 604,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 606,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 601,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:7",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 609,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 613,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 577,
																			"src": "5738:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$297",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$297",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 611,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 583,
												"id": 620,
												"nodeType": "Return",
												"src": "5650:110:7"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5222:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$297",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 297,
														"src": "5222:6:7"
													},
													"referencedDeclaration": 297,
													"src": "5222:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$297",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5236:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:7"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "5272:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:7"
									},
									"scope": 623,
									"src": "5189:578:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 624,
							"src": "751:5018:7",
							"usedErrors": [
								350,
								359
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							876
						]
					},
					"id": 877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 626,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 876,
							"linearizedBaseContracts": [
								876
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 631,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 636,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 639,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 649,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$876",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$876",
																		"typeString": "library Address"
																	}
																],
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 647,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 652,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 662,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 661,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 657,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$876",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$876",
																					"typeString": "library Address"
																				}
																			],
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 655,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 654,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 660,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													664,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 663,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 671,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 665,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 667,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 672,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 678,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 674,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 876,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 690,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 689,
												"id": 695,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 876,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 711,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$876",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$876",
																		"typeString": "library Address"
																	}
																],
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 709,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 714,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 719,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$876",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$876",
																					"typeString": "library Address"
																				}
																			],
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 717,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 716,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													726,
													728
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 725,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 728,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 727,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 733,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 729,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 731,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 737,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 739,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 736,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 708,
												"id": 741,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 876,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													754,
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 753,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 755,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [
														{
															"id": 759,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 757,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 763,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 765,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 762,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 752,
												"id": 767,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 750,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 876,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													780,
													782
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 779,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 782,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 781,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [
														{
															"id": 785,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 783,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 788,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 778,
												"id": 793,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 876,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 807,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 814,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 818,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 829,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 828,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 825,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 824,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 827,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 830,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 806,
															"id": 831,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 833,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 810,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 809,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 812,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 876,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 845,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 852,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 844,
															"id": 853,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 855,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 848,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 840,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 847,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 850,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 876,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 863,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 869,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:8",
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nativeSrc": "6073:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nativeSrc": "6096:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:8",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:8",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nativeSrc": "6137:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nativeSrc": "6130:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nativeSrc": "6130:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 860,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 860,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 867,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 859,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 876,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 877,
							"src": "195:6066:8",
							"usedErrors": [
								631,
								636,
								639
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"utils/Withdraw.sol": {
				"ast": {
					"absolutePath": "utils/Withdraw.sol",
					"exportedSymbols": {
						"IERC20": [
							297
						],
						"OwnerIsCreator": [
							199
						],
						"SafeERC20": [
							623
						],
						"Withdraw": [
							981
						]
					},
					"id": 982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 878,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"id": 880,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 220,
							"src": "57:69:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 879,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 297,
										"src": "65:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 882,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 624,
							"src": "127:82:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 881,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 623,
										"src": "135:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
							"file": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol",
							"id": 884,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 200,
							"src": "210:99:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 883,
										"name": "OwnerIsCreator",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 199,
										"src": "218:14:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 886,
										"name": "OwnerIsCreator",
										"nameLocations": [
											"508:14:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 199,
										"src": "508:14:9"
									},
									"id": 887,
									"nodeType": "InheritanceSpecifier",
									"src": "508:14:9"
								}
							],
							"canonicalName": "Withdraw",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 885,
								"nodeType": "StructuredDocumentation",
								"src": "311:175:9",
								"text": " THIS IS AN EXAMPLE CONTRACT THAT USES HARDCODED VALUES FOR CLARITY.\n THIS IS AN EXAMPLE CONTRACT THAT USES UN-AUDITED CODE.\n DO NOT USE THIS CODE IN PRODUCTION."
							},
							"fullyImplemented": true,
							"id": 981,
							"linearizedBaseContracts": [
								981,
								199,
								20,
								183,
								215
							],
							"name": "Withdraw",
							"nameLocation": "496:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 891,
									"libraryName": {
										"id": 888,
										"name": "SafeERC20",
										"nameLocations": [
											"535:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "535:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "529:27:9",
									"typeName": {
										"id": 890,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 889,
											"name": "IERC20",
											"nameLocations": [
												"549:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 297,
											"src": "549:6:9"
										},
										"referencedDeclaration": 297,
										"src": "549:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$297",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"errorSelector": "d0d04f60",
									"id": 893,
									"name": "NothingToWithdraw",
									"nameLocation": "568:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "585:2:9"
									},
									"src": "562:26:9"
								},
								{
									"errorSelector": "9d11f563",
									"id": 901,
									"name": "FailedToWithdrawEth",
									"nameLocation": "599:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "627:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "619:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "642:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "634:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "658:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "650:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:46:9"
									},
									"src": "593:72:9"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "728:253:9",
										"statements": [
											{
												"assignments": [
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "746:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "738:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 908,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "738:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 912,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "763:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Withdraw_$981",
																	"typeString": "contract Withdraw"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Withdraw_$981",
																	"typeString": "contract Withdraw"
																}
															],
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "755:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 910,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "755:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "755:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "769:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "755:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "738:38:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "791:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "801:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "791:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "787:43:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 919,
															"name": "NothingToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "811:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "811:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 921,
													"nodeType": "RevertStatement",
													"src": "804:26:9"
												}
											},
											{
												"assignments": [
													924,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "847:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "842:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 923,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "842:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 931,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "889:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 925,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "856:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "869:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "856:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 927,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "881:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "856:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "856:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "841:51:9"
											},
											{
												"condition": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "907:5:9",
													"subExpression": {
														"id": 932,
														"name": "sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "908:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "IfStatement",
												"src": "903:71:9",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 935,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "941:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "945:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "941:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 937,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "953:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 938,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "967:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 934,
															"name": "FailedToWithdrawEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "921:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function (address,address,uint256) pure"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "921:53:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 940,
													"nodeType": "RevertStatement",
													"src": "914:60:9"
												}
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 906,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 905,
												"name": "onlyOwner",
												"nameLocations": [
													"718:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "718:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "718:9:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "680:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "697:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "689:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:22:9"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:0:9"
									},
									"scope": 981,
									"src": "671:310:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "1065:187:9",
										"statements": [
											{
												"assignments": [
													953
												],
												"declarations": [
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1083:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "1075:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 952,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1075:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 960,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1125:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Withdraw_$981",
																		"typeString": "contract Withdraw"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Withdraw_$981",
																		"typeString": "contract Withdraw"
																	}
																],
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1117:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 958,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1117:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1117:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 955,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "1099:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 954,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "1092:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$297_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1092:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$297",
																"typeString": "contract IERC20"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1107:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 254,
														"src": "1092:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1092:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1075:56:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 964,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1146:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1156:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1146:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"nodeType": "IfStatement",
												"src": "1142:43:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 967,
															"name": "NothingToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1166:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1166:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 969,
													"nodeType": "RevertStatement",
													"src": "1159:26:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "1224:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "1238:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 972,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "1203:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 971,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "1196:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$297_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1196:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$297",
																"typeString": "contract IERC20"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1211:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 383,
														"src": "1196:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$297_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$297_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1196:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "1196:49:9"
											}
										]
									},
									"functionSelector": "3aeac4e1",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 950,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 949,
												"name": "onlyOwner",
												"nameLocations": [
													"1055:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "1055:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1055:9:9"
										}
									],
									"name": "withdrawToken",
									"nameLocation": "996:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "1018:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1010:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1040:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1032:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:38:9"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1065:0:9"
									},
									"scope": 981,
									"src": "987:265:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 982,
							"src": "487:767:9",
							"usedErrors": [
								350,
								631,
								636,
								639,
								893,
								901
							],
							"usedEvents": [
								37,
								43
							]
						}
					],
					"src": "32:1222:9"
				},
				"id": 9
			}
		}
	}
}